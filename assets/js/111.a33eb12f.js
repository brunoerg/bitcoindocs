(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{485:function(e,t,n){"use strict";n.r(t);var s=n(43),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"_75"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_75"}},[e._v("#")]),e._v(" 75")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("  BIP: 75\n  Layer: Applications\n  Title: Out of Band Address Exchange using Payment Protocol Encryption\n  Author: Justin Newton <justin@netki.com>\n          Matt David <mgd@mgddev.com>\n          Aaron Voisine <voisine@gmail.com>\n          James MacWhyte <macwhyte@gmail.com>\n  Comments-Summary: Recommended for implementation (one person)\n  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0075\n  Status: Final\n  Type: Standards Track\n  Created: 2015-11-20\n  License: CC-BY-4.0\n")])])]),n("h2",{attrs:{id:"abstract"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),n("p",[e._v("This BIP is an extension to BIP 70 that provides two enhancements to the\nexisting Payment Protocol.")]),e._v(" "),n("ol",[n("li",[n("p",[e._v("It allows the requester (Sender) of a PaymentRequest to voluntarily\nsign the original request and provide a certificate to allow the\npayee to know the identity of who they are transacting with.")])]),e._v(" "),n("li",[n("p",[e._v("It encrypts the PaymentRequest that is returned, before handing it\noff to the SSL/TLS layer to prevent man in the middle viewing of the\nPayment Request details.")])])]),e._v(" "),n("p",[e._v('The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL\nNOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and\n"OPTIONAL" in this document are to be interpreted as described in RFC\n2119.')]),e._v(" "),n("h2",{attrs:{id:"copyright"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#copyright"}},[e._v("#")]),e._v(" Copyright")]),e._v(" "),n("img",{attrs:{src:"https://licensebuttons.net/l/by/4.0/88x31.png"}}),e._v(" "),n("p",[e._v("This work is licensed under a "),n("a",{attrs:{href:"http://creativecommons.org/licenses/by/4.0/",title:"wikilink",target:"_blank",rel:"noopener noreferrer"}},[e._v("Creative Commons Attribution 4.0\nInternational\nLicense"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("h2",{attrs:{id:"definitions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#definitions"}},[e._v("#")]),e._v(" Definitions")]),e._v(" "),n("hr"),e._v(" "),n("p",[e._v("Sender     Entity wishing to transfer value that they control\nReceiver   Entity receiving a value transfer")]),e._v(" "),n("hr"),e._v(" "),n("h2",{attrs:{id:"motivation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[e._v("#")]),e._v(" Motivation")]),e._v(" "),n("p",[e._v("The motivation for defining this extension to the\n"),n("a",{attrs:{href:"bip-0070.mediawiki",title:"wikilink"}},[e._v("BIP70")]),e._v(" Payment Protocol is to allow two\nparties to exchange payment information in a permissioned and encrypted\nway, such that wallet address communication can become a more automated\nprocess. This extension also expands the types of PKI (public-key\ninfrastructure) data that is supported, and allows it to be shared by\nboth parties (with "),n("a",{attrs:{href:"bip-0070.mediawiki",title:"wikilink"}},[e._v("BIP70")]),e._v(", only the\nreceiver could provide PKI information). This allows for automated\ncreation of off-blockchain transaction logs that are human readable, now\nincluding information about the sender and not just the recipient.")]),e._v(" "),n("p",[e._v("The motivation for this extension to\n"),n("a",{attrs:{href:"bip-0070.mediawiki",title:"wikilink"}},[e._v("BIP70")]),e._v(" is threefold:")]),e._v(" "),n("ol",[n("li",[n("p",[e._v("Ensure that the payment details can only be seen by the participants\nin the transaction, and not by any third party.")])]),e._v(" "),n("li",[n("p",[e._v("Enhance the Payment Protocol to allow for store and forward servers\nin order to allow, for example, mobile wallets to sign and serve\nPayment Requests.")])]),e._v(" "),n("li",[n("p",[e._v("Allow a sender of funds the option of sharing their identity with\nthe receiver. This information could then be used to:")])])]),e._v(" "),n("p",[e._v("#* Make Bitcoin logs (wallet transaction history) more human readable")]),e._v(" "),n("p",[e._v("#* Give the user the ability to decide whether or not they share their\nBitcoin address and other payment details when requested")]),e._v(" "),n("p",[e._v("#* Allow for an open standards based way for businesses to keep\nverifiable records of their financial transactions, to better meet the\nneeds of accounting practices or other reporting and statutory\nrequirements")]),e._v(" "),n("p",[e._v("#* Automate the active exchange of payment addresses, so static\naddresses and BIP32 X-Pubs can be avoided to maintain privacy and\nconvenience")]),e._v(" "),n("p",[e._v("In short we wanted to make Bitcoin more human, while at the same time\nimproving transaction privacy.")]),e._v(" "),n("h2",{attrs:{id:"example-use-cases-example-use-cases"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#example-use-cases-example-use-cases"}},[e._v("#")]),e._v(" Example Use Cases {#example_use_cases}")]),e._v(" "),n("p",[e._v("1. Address Book")]),e._v(" "),n("p",[e._v('A Bitcoin wallet developer would like to offer the ability to store an\n"address book" of payees, so users could send multiple payments to\nknown entities without having to request an address every time. Static\naddresses compromise privacy, and address reuse is considered a security\nrisk. BIP32 X-Pubs allow the generation of unique addresses, but\nwatching an X-Pub chain for each person you wish to receive funds from\nis too resource-intensive for mobile applications, and there is always a\nrisk of unknowingly sending funds to an X-Pub address after the owner\nhas lost access to the corresponding private key.')]),e._v(" "),n("p",[e._v("With this BIP, Bitcoin wallets could maintain an \"address book\" that\nonly needs to store each payee's public key. Adding an entry to one's\naddress book could be done by using a Wallet Name, scanning a QR code,\nsending a URI through a text message or e-mail, or searching a public\nrepository. When the user wishes to make a payment, their wallet would\ndo all the work in the background to communicate with the payee's\nwallet to receive a unique payment address. If the payee's wallet has\nbeen lost, replaced, or destroyed, no communication will be possible,\nand the sending of funds to a \"dead\" address is prevented.")]),e._v(" "),n("p",[e._v("2. Individual Permissioned Address Release")]),e._v(" "),n("p",[e._v("A Bitcoin wallet developer would like to allow users to view a potential\nsending party's identifying information before deciding whether or not\nto share payment information with them. Currently,\n"),n("a",{attrs:{href:"bip-0070.mediawiki",title:"wikilink"}},[e._v("BIP70")]),e._v(" shares the receiver's payment\naddress and identity information with anyone who requests it.")]),e._v(" "),n("p",[e._v("With this BIP, Bitcoin wallets could use the sender's identifying\ninformation to make a determination of whether or not to share their own\ninformation. This gives the receiving party more control over who\nreceives their payment and identity information. Additionally, this\ncould be used to automatically provide new payment addresses to\nwhitelisted senders, or to protect users' privacy from unsolicited\npayment requests.")]),e._v(" "),n("p",[e._v("3. Using Store & Forward Servers")]),e._v(" "),n("p",[e._v("A Bitcoin wallet developer would like to use a public Store & Forward\nservice for an asynchronous address exchange. This is a common case for\nmobile and offline wallets.")]),e._v(" "),n("p",[e._v("With this BIP, returned payment information is encrypted with an\nECDH-computed shared key before sending to a Store & Forward service. In\nthis case, a successful attack against a Store & Forward service would\nnot be able to read or modify wallet address or payment information,\nonly delete encrypted messages.")]),e._v(" "),n("h2",{attrs:{id:"modifying-bip70-pki-type-modifying-bip70-pki-type"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#modifying-bip70-pki-type-modifying-bip70-pki-type"}},[e._v("#")]),e._v(" Modifying BIP70 pki_type {#modifying_bip70_pki_type}")]),e._v(" "),n("p",[e._v("This BIP adds additional possible values for the pki_type variable in\nthe PaymentRequest message. The complete list is now as follows:")]),e._v(" "),n("p",[e._v("pki_type       Description")]),e._v(" "),n("hr"),e._v(" "),n("p",[e._v("x509+sha256    A x.509 certificate, as described in BIP70\npgp+sha256     An "),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Pretty_Good_Privacy#OpenPGP",title:"wikilink",target:"_blank",rel:"noopener noreferrer"}},[e._v("OpenPGP"),n("OutboundLink")],1),e._v(" certificate\necdsa+sha256   A "),n("a",{attrs:{href:"https://en.bitcoin.it/wiki/Secp256k1",title:"wikilink",target:"_blank",rel:"noopener noreferrer"}},[e._v("secp256k1"),n("OutboundLink")],1),e._v(" "),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm",title:"wikilink",target:"_blank",rel:"noopener noreferrer"}},[e._v("ECDSA"),n("OutboundLink")],1),e._v(" public key")]),e._v(" "),n("p",[n("strong",[e._v("NOTE")]),e._v(": Although SHA1 was supported in BIP70, it has been deprecated\nand BIP75 only supports SHA256. The hashing algorithm is still specified\nin the values listed above for forward and backwards compatibility.")]),e._v(" "),n("h2",{attrs:{id:"new-messages-new-messages"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#new-messages-new-messages"}},[e._v("#")]),e._v(" New Messages {#new_messages}")]),e._v(" "),n("p",[e._v("Updated [/bip-0075/paymentrequest.proto paymentrequest.proto] contains\nthe existing PaymentRequest Protocol Buffer messages as well as the\nmessages newly defined in this BIP.")]),e._v(" "),n("p",[n("strong",[e._v("NOTE")]),e._v(": Public keys from both parties must be known to each other in\norder to facilitate encrypted communication. Although including both\npublic keys in every message may get redundant, it provides the most\nflexibility as each message is completely self-contained.")]),e._v(" "),n("h3",{attrs:{id:"invoicerequest"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#invoicerequest"}},[e._v("#")]),e._v(" InvoiceRequest")]),e._v(" "),n("p",[e._v("The "),n("strong",[e._v("InvoiceRequest")]),e._v(" message allows a Sender to send information to\nthe Receiver such that the Receiver can create and return a\nPaymentRequest.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('message InvoiceRequest {\n        required bytes  sender_public_key = 1;\n        optional uint64 amount = 2 [default = 0];\n        optional string pki_type = 3 [default = "none"];\n        optional bytes  pki_data = 4;\n        optional string memo = 5;\n        optional string notification_url = 6;\n        optional bytes  signature = 7;\n}\n')])])]),n("p",[e._v("Field Name          Description")]),e._v(" "),n("hr"),e._v(" "),n("p",[e._v('sender_public_key   Sender\'s SEC-encoded EC public key\namount              amount is integer-number-of-satoshis (default: 0)\npki_type            none / x509+sha256 / pgp+sha256 / ecdsa+sha256 (default: "none")\npki_data            Depends on pki_type\nmemo                Human-readable description of invoice request for the receiver\nnotification_url    Secure (usually TLS-protected HTTP) location where an '),n("a",{attrs:{href:"#EncryptedProtocolMessage",title:"wikilink"}},[e._v("EncryptedProtocolMessage")]),e._v(" SHOULD be sent when ready\nsignature           PKI-dependent signature")]),e._v(" "),n("h3",{attrs:{id:"protocolmessagetype-enum-protocolmessagetype-enum"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#protocolmessagetype-enum-protocolmessagetype-enum"}},[e._v("#")]),e._v(" ProtocolMessageType Enum {#protocolmessagetype_enum}")]),e._v(" "),n("p",[e._v("This enum is used in the newly defined\n"),n("a",{attrs:{href:"#ProtocolMessage",title:"wikilink"}},[e._v("ProtocolMessage")]),e._v(" and\n"),n("a",{attrs:{href:"#EncryptedProtocolMessage",title:"wikilink"}},[e._v("EncryptedProtocolMessage")]),e._v("\nmessages to define the serialized message type. The\n"),n("strong",[e._v("ProtocolMessageType")]),e._v(" enum is defined in an extensible way to allow\nfor new message type additions to the Payment Protocol.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("enum ProtocolMessageType {\n    UNKNOWN_MESSAGE_TYPE = 0;\n    INVOICE_REQUEST = 1;\n    PAYMENT_REQUEST = 2;\n    PAYMENT = 3;\n    PAYMENT_ACK = 4;\n}\n")])])]),n("h3",{attrs:{id:"protocolmessage"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#protocolmessage"}},[e._v("#")]),e._v(" ProtocolMessage")]),e._v(" "),n("p",[e._v("The "),n("strong",[e._v("ProtocolMessage")]),e._v(" message is an encapsulating wrapper for any\nPayment Protocol message. It allows two-way, non-encrypted communication\nof Payment Protocol messages. The message also includes a status code\nand a status message that is used for error communication such that the\nprotocol does not rely on transport-layer error handling.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("message ProtocolMessage {\n    required uint64 version = 1\n    required uint64 status_code = 2;\n    required ProtocolMessageType message_type = 3;\n    required bytes serialized_message = 4;\n    optional string status_message = 5;\n    required bytes identifier = 6;\n}\n")])])]),n("p",[e._v("Field Name           Description")]),e._v(" "),n("hr"),e._v(" "),n("p",[e._v("version              Protocol version number (Currently 1)\nstatus_code          Payment Protocol Status Code\nmessage_type         Message Type of serialized_message\nserialized_message   Serialized Payment Protocol Message\nstatus_message       Human-readable Payment Protocol status message\nidentifier           Unique key to identify this entire exchange on the server. Default value SHOULD be SHA256(Serialized Initial InvoiceRequest + Current Epoch Time in Seconds as a String)")]),e._v(" "),n("h3",{attrs:{id:"versioning"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#versioning"}},[e._v("#")]),e._v(" Versioning")]),e._v(" "),n("p",[e._v("This BIP introduces version 1 of this protocol. All messages sent using\nthese base requirements MUST use a value of 1 for the version number.\nAny future BIPs that modify this protocol (encryption schemes, etc) MUST\neach increment the version number by 1.")]),e._v(" "),n("p",[e._v('When initiating communication, the version field of the first message\nSHOULD be set to the highest version number the sender understands. All\nclients MUST be able to understand all version numbers less than the\nhighest number they support. If a client receives a message with a\nversion number higher than they understand, they MUST send the message\nback to the sender with a status code of 101 ("version too high") and\nthe version field set to the highest version number the recipient\nunderstands. The sender must then resend the original message using the\nsame version number returned by the recipient or abort.')]),e._v(" "),n("h3",{attrs:{id:"encryptedprotocolmessage"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#encryptedprotocolmessage"}},[e._v("#")]),e._v(" EncryptedProtocolMessage")]),e._v(" "),n("p",[e._v("The "),n("strong",[e._v("EncryptedProtocolMessage")]),e._v(" message is an encapsualting wrapper for\nany Payment Protocol message. It allows two-way, authenticated and\nencrypted communication of Payment Protocol messages in order to keep\ntheir contents secret. The message also includes a status code and\nstatus message that is used for error communication such that the\nprotocol does not rely on transport-layer error handling.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("message EncryptedProtocolMessage {\n    required uint64 version = 1 [default = 1];\n    required uint64 status_code = 2 [default = 1];\n    required ProtocolMessageType message_type = 3;\n    required bytes encrypted_message = 4;\n    required bytes receiver_public_key = 5;\n    required bytes sender_public_key = 6;\n    required uint64 nonce = 7;\n    required bytes identifier = 8;\n    optional string status_message = 9;\n    optional bytes signature = 10;\n}\n")])])]),n("p",[e._v("Field Name            Description")]),e._v(" "),n("hr"),e._v(" "),n("p",[e._v("version               Protocol version number\nstatus_code           Payment Protocol Status Code\nmessage_type          Message Type of Decrypted encrypted_message\nencrypted_message     AES-256-GCM Encrypted (as defined in BIP75) Payment Protocol Message\nreceiver_public_key   Receiver's SEC-encoded EC Public Key\nsender_public_key     Sender's SEC-encoded EC Public Key\nnonce                 Microseconds since epoch\nidentifier            Unique key to identify this entire exchange on the server. Default value SHOULD be SHA256(Serialized Initial InvoiceRequest + Current Epoch Time in Seconds as a String)\nstatus_message        Human-readable Payment Protocol status message\nsignature             DER-encoded Signature over the full EncryptedProtocolMessage with EC Key Belonging to Sender / Receiver, respectively")]),e._v(" "),n("h2",{attrs:{id:"payment-protocol-process-with-invoicerequests-payment-protocol-process-with-invoicerequests"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#payment-protocol-process-with-invoicerequests-payment-protocol-process-with-invoicerequests"}},[e._v("#")]),e._v(" Payment Protocol Process with InvoiceRequests {#payment_protocol_process_with_invoicerequests}")]),e._v(" "),n("p",[e._v("The full process overview for using "),n("strong",[e._v("InvoiceRequests")]),e._v(" in the Payment\nProtocol is defined below."),n("br"),e._v(" "),n("br"),e._v("\nAll Payment Protocol messages MUST be encapsulated in either a\n"),n("a",{attrs:{href:"#ProtocolMessage",title:"wikilink"}},[e._v("ProtocolMessage")]),e._v(" or\n"),n("a",{attrs:{href:"#EncryptedProcotolMessage",title:"wikilink"}},[e._v("EncryptedProtocolMessage")]),e._v(". Once\nthe process begins using\n"),n("a",{attrs:{href:"#EncryptedProtocolMessage",title:"wikilink"}},[e._v("EncryptedProtocolMessage")]),e._v("\nmessages, all subsequent communications MUST use\n"),n("a",{attrs:{href:"#EncryptedProtocolMessage",title:"wikilink"}},[e._v("EncryptedProtocolMessages")]),e._v("."),n("br"),e._v(" "),n("br"),e._v("\nAll Payment Protocol messages SHOULD be communicated using\n"),n("a",{attrs:{href:"#EncryptedProtocolMessage",title:"wikilink"}},[e._v("EncryptedProtocolMessage")]),e._v("\nencapsulating messages with the exception that an\n"),n("a",{attrs:{href:"#InvoiceRequest",title:"wikilink"}},[e._v("InvoiceRequest")]),e._v(" MAY be communicated using\nthe "),n("a",{attrs:{href:"#ProtocolMessage",title:"wikilink"}},[e._v("ProtocolMessage")]),e._v(" if the receiver's\npublic key is unknown."),n("br"),e._v(" "),n("br"),e._v("\nThe process of creating encrypted Payment Protocol messages is\nenumerated in "),n("a",{attrs:{href:"#Sending_Encrypted_Payment_Protocol_Messages_using_EncryptedProtocolMessages",title:"wikilink"}},[e._v("Sending Encrypted Payment Protocol Messages using\nEncryptedProtocolMessages")]),e._v(",\nand the process of decrypting encrypted messages can be found under\n"),n("a",{attrs:{href:"#Validating_and_Decrypting_Payment_Protocol_Messages_using_EncryptedProtocolMessages",title:"wikilink"}},[e._v("Validating and Decrypting Payment Protocol Messages using\nEncryptedProtocolMessages")]),e._v(".")]),e._v(" "),n("p",[e._v("A standard exchange from start to finish would look like the following:")]),e._v(" "),n("ol",[n("li",[e._v("Sender creates InvoiceRequest")]),e._v(" "),n("li",[e._v("Sender encapsulates InvoiceRequest in (Encrypted)ProtocolMessage")]),e._v(" "),n("li",[e._v("Sender sends (Encrypted)ProtocolMessage to Receiver")]),e._v(" "),n("li",[e._v("Receiver retrieves InvoiceRequest in (Encrypted)ProtocolMessage from\nSender")]),e._v(" "),n("li",[e._v("Receiver creates PaymentRequest")]),e._v(" "),n("li",[e._v("Receiver encapsulates PaymentRequest in EncryptedProtocolMessage")]),e._v(" "),n("li",[e._v("Receiver transmits EncryptedProtocolMessage to Sender")]),e._v(" "),n("li",[e._v("Sender validates PaymentRequest retrieved from the\nEncryptedProtocolMessage")]),e._v(" "),n("li",[e._v("The PaymentRequest is processed according to\n"),n("a",{attrs:{href:"bip-0070.mediawiki",title:"wikilink"}},[e._v("BIP70")]),e._v(", including optional Payment\nand PaymentACK messages encapsulated in EncryptedProtocolMessage\nmessages.")])]),e._v(" "),n("p",[n("strong",[e._v("NOTE:")]),e._v(" See "),n("a",{attrs:{href:"#Initial_Public_Key_Retrieval_for_InvoiceRequest_Encryption",title:"wikilink"}},[e._v("Initial Public Key Retrieval for InvoiceRequest\nEncryption")]),e._v("\nfor possible options to retrieve Receiver's public key.")]),e._v(" "),n("p",[n("code",[e._v('<img src="bip-0075/encrypted-invoice-request-process.png" alt="Flow diagram of Encrypted InvoiceRequest">')])]),e._v(" "),n("h2",{attrs:{id:"message-interaction-details-message-interaction-details"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#message-interaction-details-message-interaction-details"}},[e._v("#")]),e._v(" Message Interaction Details {#message_interaction_details}")]),e._v(" "),n("h3",{attrs:{id:"http-content-types-for-new-message-types-http-content-types-for-new-message-types"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-content-types-for-new-message-types-http-content-types-for-new-message-types"}},[e._v("#")]),e._v(" HTTP Content Types for New Message Types {#http_content_types_for_new_message_types}")]),e._v(" "),n("p",[e._v("When communicated via "),n("strong",[e._v("HTTP")]),e._v(", the listed messages MUST be transmitted\nvia TLS-protected HTTP using the appropriate Content-Type header as\ndefined here per message:"),n("br"),e._v('\n{| class="wikitable" ! Message Type !! Content Type |- |\nProtocolMessage || application/bitcoin-paymentprotocol-message |- |\nEncryptedProtocolMessage ||\napplication/bitcoin-encrypted-paymentprotocol-message |}')]),e._v(" "),n("h3",{attrs:{id:"payment-protocol-status-communication-payment-protocol-status-communication"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#payment-protocol-status-communication-payment-protocol-status-communication"}},[e._v("#")]),e._v(" Payment Protocol Status Communication {#payment_protocol_status_communication}")]),e._v(" "),n("p",[e._v("Every "),n("a",{attrs:{href:"#ProtocolMessage",title:"wikilink"}},[e._v("ProtocolMessage")]),e._v(" or\n"),n("a",{attrs:{href:"#EncryptedProtocolMessage",title:"wikilink"}},[e._v("EncryptedProtocolMessage")]),e._v(' MUST\ninclude a status code which conveys information about the last message\nreceived, if any (for the first message sent, use a status of 1 "OK"\neven though there was no previous message). In the case of an error that\ncauses the Payment Protocol process to be stopped or requires that\nmessage be retried, a ProtocolMessage or EncryptedProtocolMessage SHOULD\nbe returned by the party generating the error. The content of the\nmessage MUST contain the same '),n("strong",[e._v("serialized_message")]),e._v(" or\n"),n("strong",[e._v("encrypted_message")]),e._v(" and identifier (if present) and MUST have the\nstatus_code set appropriately."),n("br"),e._v(" "),n("br"),e._v("\nThe status_message value SHOULD be set with a human readable explanation\nof the status code.")]),e._v(" "),n("h4",{attrs:{id:"payment-protocol-status-codes-payment-protocol-status-codes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#payment-protocol-status-codes-payment-protocol-status-codes"}},[e._v("#")]),e._v(" Payment Protocol Status Codes {#payment_protocol_status_codes}")]),e._v(" "),n("p",[e._v("Status Code   Description")]),e._v(" "),n("hr"),e._v(" "),n("p",[e._v("1             OK\n2             Cancel\n100           General / Unknown Error\n101           Version Too High\n102           Authentication Failed\n103           Encrypted Message Required\n200           Amount Too High\n201           Amount Too Low\n202           Amount Invalid\n203           Payment Does Not Meet PaymentRequest Requirements\n300           Certificate Required\n301           Certificate Expired\n302           Certificate Invalid for Transaction\n303           Certificate Revoked\n304           Certificate Not Well Rooted")]),e._v(" "),n("p",[e._v('+==Canceling A Message==+ If a participant to a transaction would like\nto inform the other party that a previous message should be canceled,\nthey can send the same message with a status code of 2 ("Cancel") and,\nwhere applicable, an updated nonce. How recipients make use of the\n"Cancel" message is up to developers. For example, wallet developers\nmay want to offer users the ability to cancel payment requests they have\nsent to other users, and have that change reflected in the recipient\'s\nUI. Developers using the non-encrypted ProtocolMessage may want to\nignore "Cancel" messages, as it may be difficult to authenticate that\nthe message originated from the same user.')]),e._v(" "),n("h3",{attrs:{id:"transport-layer-communication-errors-transport-layer-communication-errors"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#transport-layer-communication-errors-transport-layer-communication-errors"}},[e._v("#")]),e._v(" Transport Layer Communication Errors {#transport_layer_communication_errors}")]),e._v(" "),n("p",[e._v("Communication errors MUST be communicated to the party that initiated\nthe communication via the communication layer's existing error\nmessaging faciltiies. In the case of TLS-protected HTTP, this SHOULD be\ndone through standard HTTP Status Code messaging ("),n("a",{attrs:{href:"https://tools.ietf.org/html/rfc7231",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 7231 Section\n6"),n("OutboundLink")],1),e._v(").")]),e._v(" "),n("h2",{attrs:{id:"extended-payment-protocol-process-details-extended-payment-protocol-process-details"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#extended-payment-protocol-process-details-extended-payment-protocol-process-details"}},[e._v("#")]),e._v(" Extended Payment Protocol Process Details {#extended_payment_protocol_process_details}")]),e._v(" "),n("p",[e._v("This BIP extends the Payment Protocol as defined in\n"),n("a",{attrs:{href:"bip-0070.mediawiki",title:"wikilink"}},[e._v("BIP70")]),e._v(".")]),e._v(" "),n("p",[e._v("For the following we assume the Sender already knows the Receiver's\npublic key, and the exchange is being facilitated by a Store & Forward\nserver which requires valid signatures for authentication.")]),e._v(" "),n("p",[n("strong",[e._v("nonce")]),e._v(" MUST be set to a non-repeating number "),n("strong",[e._v("and")]),e._v(" MUST be chosen\nby the encryptor. The current epoch time in microseconds SHOULD be used,\nunless the creating device doesn't have access to a RTC (in the case of\na smart card, for example). The service receiving the message containing\nthe "),n("strong",[e._v("nonce")]),e._v(" MAY use whatever method to make sure that the "),n("strong",[e._v("nonce")]),e._v(" is\nnever repeated.")]),e._v(" "),n("h3",{attrs:{id:"invoicerequest-message-creation-invoicerequest-message-creation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#invoicerequest-message-creation-invoicerequest-message-creation"}},[e._v("#")]),e._v(" InvoiceRequest Message Creation {#invoicerequest_message_creation}")]),e._v(" "),n("ul",[n("li",[e._v("Create an "),n("a",{attrs:{href:"#InvoiceRequest",title:"wikilink"}},[e._v("InvoiceRequest")]),e._v(" message")]),e._v(" "),n("li",[n("strong",[e._v("sender_public_key")]),e._v(" MUST be set to the public key of an EC keypair")]),e._v(" "),n("li",[n("strong",[e._v("amount")]),e._v(" is optional. If the amount is not specified by the\n"),n("a",{attrs:{href:"#InvoiceRequest",title:"wikilink"}},[e._v("InvoiceRequest")]),e._v(", the Receiver MAY\nspecify the amount in the returned PaymentRequest. If an amount is\nspecified by the "),n("a",{attrs:{href:"#InvoiceRequest",title:"wikilink"}},[e._v("InvoiceRequest")]),e._v(" and a\nPaymentRequest cannot be generated for that amount, the\n"),n("a",{attrs:{href:"#InvoiceRequest",title:"wikilink"}},[e._v("InvoiceRequest")]),e._v(" SHOULD return the same\n"),n("a",{attrs:{href:"#InvoiceRequest",title:"wikilink"}},[e._v("InvoiceRequest")]),e._v(" in a\n"),n("a",{attrs:{href:"#ProtocolMessage",title:"wikilink"}},[e._v("ProtocolMessage")]),e._v(" or\n"),n("a",{attrs:{href:"#EncryptedProtocolMessage",title:"wikilink"}},[e._v("EncryptedProtocolMessage")]),e._v("\nwith the status_code and status_message fields set appropriately.")]),e._v(" "),n("li",[n("strong",[e._v("memo")]),e._v(" is optional. This MAY be set to a human readable\ndescription of the InvoiceRequest")]),e._v(" "),n("li",[e._v("Set "),n("strong",[e._v("notification_url")]),e._v(" to URL that the Receiver will submit\ncompleted PaymentRequest (encapsulated in an\n"),n("a",{attrs:{href:"#EncryptedProtocolMessage",title:"wikilink"}},[e._v("EncryptedProtocolMessage")]),e._v(") to")]),e._v(" "),n("li",[e._v("If NOT including certificate, set "),n("strong",[e._v("pki_type")]),e._v(' to "none"')]),e._v(" "),n("li",[e._v("If including certificate:\n"),n("ul",[n("li",[e._v("Set "),n("strong",[e._v("pki_type")]),e._v(' to "x509+sha256"')]),e._v(" "),n("li",[e._v("Set "),n("strong",[e._v("pki_data")]),e._v(" as it would be set in BIP-0070\n("),n("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki#Certificates",target:"_blank",rel:"noopener noreferrer"}},[e._v("Certificates"),n("OutboundLink")],1),e._v(")")]),e._v(" "),n("li",[e._v("Sign "),n("a",{attrs:{href:"#InvoiceRequest",title:"wikilink"}},[e._v("InvoiceRequest")]),e._v(' with signature\n= "" using the X509 Certificate\'s private key')]),e._v(" "),n("li",[e._v("Set "),n("strong",[e._v("signature")]),e._v(" value to the computed signature")])])])]),e._v(" "),n("h3",{attrs:{id:"invoicerequest-validation-invoicerequest-validation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#invoicerequest-validation-invoicerequest-validation"}},[e._v("#")]),e._v(" InvoiceRequest Validation {#invoicerequest_validation}")]),e._v(" "),n("ul",[n("li",[e._v("Validate "),n("strong",[e._v("sender_public_key")]),e._v(" is a valid EC public key")]),e._v(" "),n("li",[e._v("Validate "),n("strong",[e._v("notification_url")]),e._v(", if set, contains characters deemed\nvalid for a URL (avoiding XSS related characters, etc).")]),e._v(" "),n("li",[e._v("If "),n("strong",[e._v("pki_type")]),e._v(" is None,\n"),n("a",{attrs:{href:"#InvoiceRequest",title:"wikilink"}},[e._v("InvoiceRequest")]),e._v(" is VALID")]),e._v(" "),n("li",[e._v("If "),n("strong",[e._v("pki_type")]),e._v(" is x509+sha256 and "),n("strong",[e._v("signature")]),e._v(" is valid for the\nserialized "),n("a",{attrs:{href:"#InvoiceRequest",title:"wikilink"}},[e._v("InvoiceRequest")]),e._v(' where\nsignature is set to "",\n'),n("a",{attrs:{href:"#InvoiceRequest",title:"wikilink"}},[e._v("InvoiceRequest")]),e._v(" is VALID")])]),e._v(" "),n("h3",{attrs:{id:"sending-encrypted-payment-protocol-messages-using-encryptedprotocolmessages-sending-encrypted-payment-protocol-messages-using-encryptedprotocolmessages"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sending-encrypted-payment-protocol-messages-using-encryptedprotocolmessages-sending-encrypted-payment-protocol-messages-using-encryptedprotocolmessages"}},[e._v("#")]),e._v(" Sending Encrypted Payment Protocol Messages using EncryptedProtocolMessages {#sending_encrypted_payment_protocol_messages_using_encryptedprotocolmessages}")]),e._v(" "),n("ul",[n("li",[e._v("Encrypt the serialized Payment Protocol message using AES-256-GCM\nsetup as described in "),n("a",{attrs:{href:"#ECDH_Point_Generation_and_AES256_GCM_Mode_Setup",title:"wikilink"}},[e._v("ECDH Point Generation and AES-256 (GCM Mode)\nSetup")])]),e._v(" "),n("li",[e._v("Create\n"),n("a",{attrs:{href:"#EncryptedProtocolMessage",title:"wikilink"}},[e._v("EncryptedProtocolMessage")]),e._v("\nmessage")]),e._v(" "),n("li",[e._v("Set "),n("strong",[e._v("encrypted_message")]),e._v(" to be the encrypted value of the Payment\nProtocol message")]),e._v(" "),n("li",[n("strong",[e._v("version")]),e._v(" SHOULD be set to the highest version number the client\nunderstands (currently 1)")]),e._v(" "),n("li",[n("strong",[e._v("sender_public_key")]),e._v(" MUST be set to the public key of the Sender's\nEC keypair")]),e._v(" "),n("li",[n("strong",[e._v("receiver_public_key")]),e._v(" MUST be set to the public key of the\nReceiver's EC keypair")]),e._v(" "),n("li",[n("strong",[e._v("nonce")]),e._v(" MUST be set to the nonce used in the AES-256-GCM\nencryption operation")]),e._v(" "),n("li",[e._v("Set "),n("strong",[e._v("identifier")]),e._v(" to the identifier value received in the\noriginating InvoiceRequest's ProtocolMessage or\nEncryptedProtocolMessage wrapper message")]),e._v(" "),n("li",[e._v("Set "),n("strong",[e._v("signature")]),e._v(' to ""')]),e._v(" "),n("li",[e._v("Sign the serialized\n"),n("a",{attrs:{href:"#EncryptedProtocolMessage",title:"wikilink"}},[e._v("EncryptedProtocolMessage")]),e._v("\nmessage with the communicating party's EC public key")]),e._v(" "),n("li",[e._v("Set "),n("strong",[e._v("signature")]),e._v(" to the result of the signature operation above")])]),e._v(" "),n("p",[n("strong",[e._v("SIGNATURE NOTE:")]),e._v(" "),n("a",{attrs:{href:"#EncryptedProtocolMessage",title:"wikilink"}},[e._v("EncryptedProtocolMessage")]),e._v("\nmessages are signed with the public keys of the party transmitting the\nmessage. This allows a Store & Forward server or other transmission\nsystem to prevent spam or other abuses. For those who are privacy\nconscious and don't want the server to track the interactions between\ntwo public keys, the Sender can generate a new public key for each\ninteraction to keep their identity anonymous.")]),e._v(" "),n("h3",{attrs:{id:"validating-and-decrypting-payment-protocol-messages-using-encryptedprotocolmessages-validating-and-decrypting-payment-protocol-messages-using-encryptedprotocolmessages"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#validating-and-decrypting-payment-protocol-messages-using-encryptedprotocolmessages-validating-and-decrypting-payment-protocol-messages-using-encryptedprotocolmessages"}},[e._v("#")]),e._v(" Validating and Decrypting Payment Protocol Messages using EncryptedProtocolMessages {#validating_and_decrypting_payment_protocol_messages_using_encryptedprotocolmessages}")]),e._v(" "),n("ul",[n("li",[e._v("The "),n("strong",[e._v("nonce")]),e._v(" MUST not be repeated. The service receiving the\n"),n("a",{attrs:{href:"#EncryptedProtocolMessage",title:"wikilink"}},[e._v("EncryptedProtocolMessage")]),e._v(" MAY\nuse whatever method to make sure that the nonce is never repeated.")]),e._v(" "),n("li",[e._v("Decrypt the serialized Payment Protocol message using AES-256-GCM\nsetup as described in "),n("a",{attrs:{href:"#ECDH_Point_Generation_and_AES256_GCM_Mode_Setup",title:"wikilink"}},[e._v("ECDH Point Generation and AES-256 (GCM Mode)\nSetup")])]),e._v(" "),n("li",[e._v("Deserialize the serialized Payment Protocol message")])]),e._v(" "),n("h3",{attrs:{id:"ecdh-point-generation-and-aes-256-gcm-mode-setup-ecdh-point-generation-and-aes-256-gcm-mode-setup"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ecdh-point-generation-and-aes-256-gcm-mode-setup-ecdh-point-generation-and-aes-256-gcm-mode-setup"}},[e._v("#")]),e._v(" ECDH Point Generation and AES-256 (GCM Mode) Setup {#ecdh_point_generation_and_aes_256_gcm_mode_setup}")]),e._v(" "),n("p",[n("strong",[e._v("NOTE")]),e._v(": AES-256-GCM is used because it provides authenticated\nencryption facilities, thus negating the need for a separate message\nhash for authentication.")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("Generate the "),n("strong",[e._v("secret point")]),e._v(" using\n"),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Elliptic_curve_Diffie%E2%80%93Hellman",target:"_blank",rel:"noopener noreferrer"}},[e._v("ECDH"),n("OutboundLink")],1),e._v("\nusing the local entity's private key and the remote entity's\npublic key as inputs")])]),e._v(" "),n("li",[n("p",[e._v("Initialize\n"),n("a",{attrs:{href:"http://csrc.nist.gov/publications/nistpubs/800-90A/SP800-90A.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("HMAC_DRBG"),n("OutboundLink")],1)]),e._v(" "),n("ul",[n("li",[e._v("Use "),n("strong",[e._v("SHA512(secret point's X value in Big-Endian bytes)")]),e._v(" for\nEntropy")]),e._v(" "),n("li",[e._v("Use the given message's "),n("strong",[e._v("nonce")]),e._v(" field for Nonce, converted to\nbyte string (Big Endian)")])])]),e._v(" "),n("li",[n("p",[e._v("Initialize AES-256 in GCM Mode")]),e._v(" "),n("ul",[n("li",[e._v("Initialize HMAC_DRBG with Security Strength of 256 bits")]),e._v(" "),n("li",[e._v("Use HMAC_DRBG.GENERATE(32) as the Encryption Key (256 bits)")]),e._v(" "),n("li",[e._v("Use HMAC_DRBG.GENERATE(12) as the Initialization Vector (IV) (96\nbits)")])])])]),e._v(" "),n("h4",{attrs:{id:"aes-256-gcm-authentication-tag-use-aes-256-gcm-authentication-tag-use"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#aes-256-gcm-authentication-tag-use-aes-256-gcm-authentication-tag-use"}},[e._v("#")]),e._v(" AES-256 GCM Authentication Tag Use {#aes_256_gcm_authentication_tag_use}")]),e._v(" "),n("p",[e._v("The 16 byte authentication tag resulting from the AES-GCM encrypt\noperation MUST be prefixed to the returned ciphertext. The decrypt\noperation will use the first 16 bytes of the ciphertext as the GCM\nauthentication tag and the remainder of the ciphertext as the ciphertext\nin the decrypt operation.")]),e._v(" "),n("h4",{attrs:{id:"aes-256-gcm-additional-authenticated-data-aes-256-gcm-additional-authenticated-data"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#aes-256-gcm-additional-authenticated-data-aes-256-gcm-additional-authenticated-data"}},[e._v("#")]),e._v(" AES-256 GCM Additional Authenticated Data {#aes_256_gcm_additional_authenticated_data}")]),e._v(" "),n("p",[e._v("When either "),n("strong",[e._v("status_code")]),e._v(" OR "),n("strong",[e._v("status_message")]),e._v(" are present, the\nAES-256 GCM authenticated data used in both the encrypt and decrypt\noperations MUST be: STRING(status_code) || status_message. Otherwise,\nthere is no additional authenticated data. This provides that, while not\nencrypted, the status_code and status_message are authenticated.")]),e._v(" "),n("h3",{attrs:{id:"initial-public-key-retrieval-for-invoicerequest-encryption-initial-public-key-retrieval-for-invoicerequest-encryption"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#initial-public-key-retrieval-for-invoicerequest-encryption-initial-public-key-retrieval-for-invoicerequest-encryption"}},[e._v("#")]),e._v(" Initial Public Key Retrieval for InvoiceRequest Encryption {#initial_public_key_retrieval_for_invoicerequest_encryption}")]),e._v(" "),n("p",[e._v("Initial public key retrieval for\n"),n("a",{attrs:{href:"#InvoiceRequest",title:"wikilink"}},[e._v("InvoiceRequest")]),e._v(" encryption via\n"),n("a",{attrs:{href:"#EncryptedProtocolMessage",title:"wikilink"}},[e._v("EncryptedProtocolMessage")]),e._v("\nencapsulation can be done in a number of ways including, but not limited\nto, the following:")]),e._v(" "),n("ol",[n("li",[e._v("Wallet Name public key asset type resolution - DNSSEC-validated name\nresolution returns Base64 encoded DER-formatted EC public key via\nTXT Record "),n("a",{attrs:{href:"https://www.ietf.org/rfc/rfc5480.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 5480"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("Key Server lookup - Key Server lookup (similar to PGP's\npgp.mit.edu) based on key server identifier (i.e., e-mail address)\nreturns Base64 encoded DER-formatted EC public key "),n("a",{attrs:{href:"https://www.ietf.org/rfc/rfc5480.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC\n5480"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("QR Code - Use of QR-code to encode SEC-formatted EC public key "),n("a",{attrs:{href:"https://www.ietf.org/rfc/rfc5480.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC\n5480"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("Address Service Public Key Exposure")])]),e._v(" "),n("h2",{attrs:{id:"payment-paymentack-messages-with-a-http-store-forward-server-payment-paymentack-messages-with-a-http-store-forward-server"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#payment-paymentack-messages-with-a-http-store-forward-server-payment-paymentack-messages-with-a-http-store-forward-server"}},[e._v("#")]),e._v(" Payment / PaymentACK Messages with a HTTP Store & Forward Server {#payment_paymentack_messages_with_a_http_store_forward_server}")]),e._v(" "),n("p",[e._v("If a Store & Forward server wishes to protect themselves from spam or\nabuse, they MAY enact whatever rules they deem fit, such as the\nfollowing:")]),e._v(" "),n("ul",[n("li",[e._v("Once an InvoiceRequest or PaymentRequest is received, all subsequent\nmessages using the same identifier must use the same Sender and\nReceiver public keys.")]),e._v(" "),n("li",[e._v("For each unique identifier, only one message each of type\nInvoiceRequest, PaymentRequest, and PaymentACK may be submitted.\nPayment messages may be submitted/overwritten multiple times. All\nmessages submitted after a PaymentACK is received will be rejected.")]),e._v(" "),n("li",[e._v("Specific messages are only saved until they have been verifiably\nreceived by the intended recipient or a certain amount of time has\npassed, whichever comes first.")])]),e._v(" "),n("p",[n("br"),e._v(" "),n("br"),e._v("\nClients SHOULD keep in mind Receivers can broadcast a transaction\nwithout returning an ACK. If a Payment message needs to be updated, it\nSHOULD include at least one input referenced in the original transaction\nto prevent the Receiver from broadcasting both transactions and getting\npaid twice.")]),e._v(" "),n("h2",{attrs:{id:"public-key-signature-encoding-public-key-signature-encoding"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#public-key-signature-encoding-public-key-signature-encoding"}},[e._v("#")]),e._v(" Public Key & Signature Encoding {#public_key_signature_encoding}")]),e._v(" "),n("ul",[n("li",[e._v("All x.509 certificates included in any message defined in this BIP\nMUST be DER [ITU.X690.1994] encoded.")]),e._v(" "),n("li",[e._v("All EC public keys ("),n("strong",[e._v("sender_public_key")]),e._v(", "),n("strong",[e._v("receiver_public_key")]),e._v(")\nin any message defined in this BIP MUST be\n"),n("a",{attrs:{href:"SECP256k1",title:"wikilink"}},[n("a",{attrs:{href:"http://www.secg.org/sec2-v2.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.secg.org/sec2-v2.pdf"),n("OutboundLink")],1)]),e._v(" ECDSA\nPublic Key ECPoints encoded using\n"),n("a",{attrs:{href:"SEC_2.3.3_Encoding",title:"wikilink"}},[n("a",{attrs:{href:"http://www.secg.org/sec1-v2.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.secg.org/sec1-v2.pdf"),n("OutboundLink")],1)]),e._v(".\nEncoding MAY be compressed.")]),e._v(" "),n("li",[e._v("All ECC signatures included in any message defined in this BIP MUST\nuse the SHA-256 hashing algorithm and MUST be DER [ITU.X690.1994]\nencoded.")]),e._v(" "),n("li",[e._v("All OpenPGP certificates must follow\n"),n("a",{attrs:{href:"https://tools.ietf.org/html/rfc4880",title:"wikilink",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC4880"),n("OutboundLink")],1),e._v(", sections\n5.5 and 12.1.")])]),e._v(" "),n("h2",{attrs:{id:"implementation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[e._v("#")]),e._v(" Implementation")]),e._v(" "),n("p",[e._v("A reference implementation for a Store & Forward server supporting this\nproposal can be found here:")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/netkicorp/addressimo",target:"_blank",rel:"noopener noreferrer"}},[e._v("Addressimo"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("A reference client implementation can be found in the InvoiceRequest\nfunctional testing for Addressimo here:")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/netkicorp/addressimo/blob/master/functest/functest_bip75.py",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP75 Client Reference\nImplementation"),n("OutboundLink")],1)]),e._v(" "),n("h2",{attrs:{id:"bip70-extension-bip70-extension"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bip70-extension-bip70-extension"}},[e._v("#")]),e._v(" BIP70 Extension {#bip70_extension}")]),e._v(" "),n("p",[e._v("The following flowchart is borrowed from\n"),n("a",{attrs:{href:"bip-0070.mediawiki",title:"wikilink"}},[e._v("BIP70")]),e._v(" and expanded upon in order to\nvisually describe how this BIP is an extension to\n"),n("a",{attrs:{href:"bip-0070.mediawiki",title:"wikilink"}},[e._v("BIP70")]),e._v(".")]),e._v(" "),n("p",[n("code",[e._v('<img src="bip-0075/bip70-extension.png" alt="Flowchart explaining how this BIP extends BIP 70">')])]),e._v(" "),n("h2",{attrs:{id:"mobile-to-mobile-examples-mobile-to-mobile-examples"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mobile-to-mobile-examples-mobile-to-mobile-examples"}},[e._v("#")]),e._v(" Mobile to Mobile Examples {#mobile_to_mobile_examples}")]),e._v(" "),n("h3",{attrs:{id:"full-payment-protocol-full-payment-protocol"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#full-payment-protocol-full-payment-protocol"}},[e._v("#")]),e._v(" Full Payment Protocol {#full_payment_protocol}")]),e._v(" "),n("p",[e._v("The following diagram shows a sample flow in which one mobile client is\nsending value to a second mobile client with the use of an\nInvoiceRequest, a Store & Forward server, PaymentRequest, Payment and\nPaymentACK. In this case, the PaymentRequest, Payment and PaymentACK\nmessages are encrypted using\n"),n("a",{attrs:{href:"#EncryptedProtocolMessage",title:"wikilink"}},[e._v("EncryptedProtocolMessage")]),e._v(" "),n("strong",[e._v("and")]),e._v("\nthe Receiver submits the transaction to the Bitcoin network.")]),e._v(" "),n("p",[n("code",[e._v('<img src="bip-0075/mobile-sf-ir-with-payment.png" alt="Payment Required flow diagram">')])]),e._v(" "),n("h3",{attrs:{id:"encrypting-initial-invoicerequest-via-encryptedprotocolmessage-encrypting-initial-invoicerequest-via-encryptedprotocolmessage"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#encrypting-initial-invoicerequest-via-encryptedprotocolmessage-encrypting-initial-invoicerequest-via-encryptedprotocolmessage"}},[e._v("#")]),e._v(" Encrypting Initial InvoiceRequest via EncryptedProtocolMessage {#encrypting_initial_invoicerequest_via_encryptedprotocolmessage}")]),e._v(" "),n("p",[e._v("The following diagram shows a sample flow in which one mobile client is\nsending value to a second mobile client using an\n"),n("a",{attrs:{href:"#EncryptedProtocolMessage",title:"wikilink"}},[e._v("EncryptedProtocolMessage")]),e._v(" to\ntransmit the InvoiceRequest using encryption, Store & Forward server,\nand PaymentRequest. In this case, all Payment Protocol messages are\nencrypting using\n"),n("a",{attrs:{href:"#EncryptedProtocolMessage",title:"wikilink"}},[e._v("EncryptedProtocolMessage")]),e._v(" "),n("strong",[e._v("and")]),e._v("\nthe Sender submits the transaction to the Bitcoin network.")]),e._v(" "),n("p",[n("code",[e._v('<img src="bip-0075/mobile-sf-encrypted-ir-without-payment.png" alt="Encrypted InvoiceRequest without payment">')])]),e._v(" "),n("h2",{attrs:{id:"references"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[e._v("#")]),e._v(" References")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"bip-0070.mediawiki",title:"wikilink"}},[e._v("BIP70 - Payment Protocol")])]),e._v(" "),n("li",[n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Elliptic_curve_Diffie%E2%80%93Hellman",target:"_blank",rel:"noopener noreferrer"}},[e._v("ECDH"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"http://csrc.nist.gov/publications/nistpubs/800-90A/SP800-90A.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("HMAC_DRBG"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"http://csrc.nist.gov/publications/nistpubs/800-38D/SP-800-38D.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("NIST Special Publication 800-38D - Recommendation for Block Cipher\nModes of Operation: Galois/Counter Mode (GCM) and\nGMAC"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://tools.ietf.org/html/rfc6979",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC6979"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://en.bitcoin.it/wiki/Address_reuse",target:"_blank",rel:"noopener noreferrer"}},[e._v("Address Reuse"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("FIPS 180-4 (Secure Hash\nStandard)"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=i.exports}}]);