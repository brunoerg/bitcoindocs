(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{466:function(e,t,s){"use strict";s.r(t);var n=s(43),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"_44"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_44"}},[e._v("#")]),e._v(" 44")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("  BIP: 44\n  Layer: Applications\n  Title: Multi-Account Hierarchy for Deterministic Wallets\n  Author: Marek Palatinus <slush@satoshilabs.com>\n          Pavol Rusnak <stick@satoshilabs.com>\n  Comments-Summary: Mixed review (one person)\n  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0044\n  Status: Proposed\n  Type: Standards Track\n  Created: 2014-04-24\n")])])]),s("h2",{attrs:{id:"abstract"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),s("p",[e._v("This BIP defines a logical hierarchy for deterministic wallets based on\nan algorithm described in BIP-0032 (BIP32 from now on) and purpose\nscheme described in BIP-0043 (BIP43 from now on).")]),e._v(" "),s("p",[e._v("This BIP is a particular application of BIP43.")]),e._v(" "),s("h2",{attrs:{id:"motivation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[e._v("#")]),e._v(" Motivation")]),e._v(" "),s("p",[e._v("The hierarchy proposed in this paper is quite comprehensive. It allows\nthe handling of multiple coins, multiple accounts, external and internal\nchains per account and millions of addresses per chain.")]),e._v(" "),s("h2",{attrs:{id:"path-levels-path-levels"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#path-levels-path-levels"}},[e._v("#")]),e._v(" Path levels {#path_levels}")]),e._v(" "),s("p",[e._v("We define the following 5 levels in BIP32 path:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("m / purpose' / coin_type' / account' / change / address_index\n")])])]),s("p",[e._v("Apostrophe in the path indicates that BIP32 hardened derivation is used.")]),e._v(" "),s("p",[e._v("Each level has a special meaning, described in the chapters below.")]),e._v(" "),s("h3",{attrs:{id:"purpose"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#purpose"}},[e._v("#")]),e._v(" Purpose")]),e._v(" "),s("p",[e._v("Purpose is a constant set to 44' (or 0x8000002C) following the BIP43\nrecommendation. It indicates that the subtree of this node is used\naccording to this specification.")]),e._v(" "),s("p",[e._v("Hardened derivation is used at this level.")]),e._v(" "),s("h3",{attrs:{id:"coin-type-coin-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#coin-type-coin-type"}},[e._v("#")]),e._v(" Coin type {#coin_type}")]),e._v(" "),s("p",[e._v("One master node (seed) can be used for unlimited number of independent\ncryptocoins such as Bitcoin, Litecoin or Namecoin. However, sharing the\nsame space for various cryptocoins has some disadvantages.")]),e._v(" "),s("p",[e._v("This level creates a separate subtree for every cryptocoin, avoiding\nreusing addresses across cryptocoins and improving privacy issues.")]),e._v(" "),s("p",[e._v("Coin type is a constant, set for each cryptocoin. Cryptocoin developers\nmay ask for registering unused number for their project.")]),e._v(" "),s("p",[e._v('The list of already allocated coin types is in the chapter "Registered\ncoin types" below.')]),e._v(" "),s("p",[e._v("Hardened derivation is used at this level.")]),e._v(" "),s("h3",{attrs:{id:"account"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#account"}},[e._v("#")]),e._v(" Account")]),e._v(" "),s("p",[e._v("This level splits the key space into independent user identities, so the\nwallet never mixes the coins across different accounts.")]),e._v(" "),s("p",[e._v("Users can use these accounts to organize the funds in the same fashion\nas bank accounts; for donation purposes (where all addresses are\nconsidered public), for saving purposes, for common expenses etc.")]),e._v(" "),s("p",[e._v("Accounts are numbered from index 0 in sequentially increasing manner.\nThis number is used as child index in BIP32 derivation.")]),e._v(" "),s("p",[e._v("Hardened derivation is used at this level.")]),e._v(" "),s("p",[e._v("Software should prevent a creation of an account if a previous account\ndoes not have a transaction history (meaning none of its addresses have\nbeen used before).")]),e._v(" "),s("p",[e._v('Software needs to discover all used accounts after importing the seed\nfrom an external source. Such an algorithm is described in "Account\ndiscovery" chapter.')]),e._v(" "),s("h3",{attrs:{id:"change"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#change"}},[e._v("#")]),e._v(" Change")]),e._v(" "),s("p",[e._v("Constant 0 is used for external chain and constant 1 for internal chain\n(also known as change addresses). External chain is used for addresses\nthat are meant to be visible outside of the wallet (e.g. for receiving\npayments). Internal chain is used for addresses which are not meant to\nbe visible outside of the wallet and is used for return transaction\nchange.")]),e._v(" "),s("p",[e._v("Public derivation is used at this level.")]),e._v(" "),s("h3",{attrs:{id:"index"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#index"}},[e._v("#")]),e._v(" Index")]),e._v(" "),s("p",[e._v("Addresses are numbered from index 0 in sequentially increasing manner.\nThis number is used as child index in BIP32 derivation.")]),e._v(" "),s("p",[e._v("Public derivation is used at this level.")]),e._v(" "),s("h2",{attrs:{id:"account-discovery-account-discovery"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#account-discovery-account-discovery"}},[e._v("#")]),e._v(" Account discovery {#account_discovery}")]),e._v(" "),s("p",[e._v("When the master seed is imported from an external source the software\nshould start to discover the accounts in the following manner:")]),e._v(" "),s("ol",[s("li",[e._v("derive the first account's node (index = 0)")]),e._v(" "),s("li",[e._v("derive the external chain node of this account")]),e._v(" "),s("li",[e._v("scan addresses of the external chain; respect the gap limit\ndescribed below")]),e._v(" "),s("li",[e._v("if no transactions are found on the external chain, stop discovery")]),e._v(" "),s("li",[e._v("if there are some transactions, increase the account index and go to\nstep 1")])]),e._v(" "),s("p",[e._v('This algorithm is successful because software should disallow creation\nof new accounts if previous one has no transaction history, as described\nin chapter "Account" above.')]),e._v(" "),s("p",[e._v("Please note that the algorithm works with the transaction history, not\naccount balances, so you can have an account with 0 total coins and the\nalgorithm will still continue with discovery.")]),e._v(" "),s("h3",{attrs:{id:"address-gap-limit-address-gap-limit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#address-gap-limit-address-gap-limit"}},[e._v("#")]),e._v(" Address gap limit {#address_gap_limit}")]),e._v(" "),s("p",[e._v("Address gap limit is currently set to 20. If the software hits 20 unused\naddresses in a row, it expects there are no used addresses beyond this\npoint and stops searching the address chain. We scan just the external\nchains, because internal chains receive only coins that come from the\nassociated external chains.")]),e._v(" "),s("p",[e._v("Wallet software should warn when the user is trying to exceed the gap\nlimit on an external chain by generating a new address.")]),e._v(" "),s("h2",{attrs:{id:"registered-coin-types-registered-coin-types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#registered-coin-types-registered-coin-types"}},[e._v("#")]),e._v(" Registered coin types {#registered_coin_types}")]),e._v(" "),s("p",[e._v('These are the default registered coin types for usage in level 2 of\nBIP44 described in chapter "Coin type" above.')]),e._v(" "),s("p",[e._v("All these constants are used as hardened derivation.")]),e._v(" "),s("p",[e._v("index   hexa         coin")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("0       0x80000000   Bitcoin\n1       0x80000001   Bitcoin Testnet")]),e._v(" "),s("p",[e._v("This BIP is not a central directory for the registered coin types,\nplease visit SatoshiLabs that maintains the full list:")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/satoshilabs/slips/blob/master/slip-0044.md",title:"wikilink",target:"_blank",rel:"noopener noreferrer"}},[e._v("SLIP-0044 : Registered coin types for\nBIP-0044"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("To register a new coin type, an existing wallet that implements the\nstandard is required and a pull request to the above file should be\ncreated.")]),e._v(" "),s("h2",{attrs:{id:"examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),s("p",[e._v("coin              account   chain      address   path")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("Bitcoin           first     external   first     m / 44' / 0' / 0' / 0 / 0\nBitcoin           first     external   second    m / 44' / 0' / 0' / 0 / 1\nBitcoin           first     change     first     m / 44' / 0' / 0' / 1 / 0\nBitcoin           first     change     second    m / 44' / 0' / 0' / 1 / 1\nBitcoin           second    external   first     m / 44' / 0' / 1' / 0 / 0\nBitcoin           second    external   second    m / 44' / 0' / 1' / 0 / 1\nBitcoin           second    change     first     m / 44' / 0' / 1' / 1 / 0\nBitcoin           second    change     second    m / 44' / 0' / 1' / 1 / 1\nBitcoin Testnet   first     external   first     m / 44' / 1' / 0' / 0 / 0\nBitcoin Testnet   first     external   second    m / 44' / 1' / 0' / 0 / 1\nBitcoin Testnet   first     change     first     m / 44' / 1' / 0' / 1 / 0\nBitcoin Testnet   first     change     second    m / 44' / 1' / 0' / 1 / 1\nBitcoin Testnet   second    external   first     m / 44' / 1' / 1' / 0 / 0\nBitcoin Testnet   second    external   second    m / 44' / 1' / 1' / 0 / 1\nBitcoin Testnet   second    change     first     m / 44' / 1' / 1' / 1 / 0\nBitcoin Testnet   second    change     second    m / 44' / 1' / 1' / 1 / 1")]),e._v(" "),s("h2",{attrs:{id:"reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[e._v("#")]),e._v(" Reference")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"bip-0032.mediawiki",title:"wikilink"}},[e._v("BIP32 - Hierarchical Deterministic\nWallets")])]),e._v(" "),s("li",[s("a",{attrs:{href:"bip-0043.mediawiki",title:"wikilink"}},[e._v("BIP43 - Purpose Field for Deterministic\nWallets")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);