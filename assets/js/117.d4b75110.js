(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{491:function(e,t,n){"use strict";n.r(t);var i=n(43),a=Object(i.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"_83"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_83"}},[e._v("#")]),e._v(" 83")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("  BIP: 83\n  Layer: Applications\n  Title: Dynamic Hierarchical Deterministic Key Trees\n  Author: Eric Lombrozo <eric@ciphrex.com>\n  Comments-Summary: No comments yet.\n  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0083\n  Status: Rejected\n  Type: Standards Track\n  Created: 2015-11-16\n  License: PD\n")])])]),n("h2",{attrs:{id:"abstract"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),n("p",[e._v("This BIP defines a scheme for key derivation that allows for dynamic\ncreation of key hierarchies based on the algorithm described in BIP32.")]),e._v(" "),n("h2",{attrs:{id:"motivation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[e._v("#")]),e._v(" Motivation")]),e._v(" "),n("p",[e._v("Several proposals have been made to try to standardize a structure for\nhierarchical deterministic wallets for the sake of interoperability\n(reference BIP32, BIP44, BIP45). However, all proposals to date have\ntried to impose a specific structure upfront without providing any\nflexibility for dynamic creation of new hierarchical levels with\ndifferent semantics or mapping between different applications that use\ndistinct structures.")]),e._v(" "),n("p",[e._v("Instead of attempting to impose a specific structure upfront, this BIP\nproposes that we design the derivation in such a way that we can\ncontinue extending hierarchies arbitrarily and indefinitely.")]),e._v(" "),n("h2",{attrs:{id:"specification"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#specification"}},[e._v("#")]),e._v(" Specification")]),e._v(" "),n("p",[e._v("BIP32 provides a hierarchical derivation scheme where every node in the\ntree can be either used to derive child nodes or used as a signing key\nfor ECDSA. This means that as soon as we choose to use a node as a\nsigning key, we can no longer derive children from that node. To draw an\nanalogy to file systems, each node is either a file or a directory but\nnever both. However, given the need to predictably know the location of\nnew children, it is generally not a good idea to mix both signing keys\nand parent nodes at the same level in the hierarchy. This means that as\nsoon as we've decided that a particular level in the hierarchy is to be\nused for signing keys, we've lost the ability to nest deeper levels\ninto the tree.")]),e._v(" "),n("p",[e._v("At every level of the hierarchy, we reserve the child with index 0 to\nallow further nesting, and for signing key parent nodes use child\nindices 1 to MAX_INDEX (2^31^ - 1) for signing keys. We can use either\nhardened or nonhardened derivation.")]),e._v(" "),n("p",[e._v("Let p denote a specific signing key parent node and k be an index\ngreater than 0. The children signing keys are then:")]),e._v(" "),n("p",[e._v("p / k")]),e._v(" "),n("p",[e._v("with k > 0.")]),e._v(" "),n("p",[e._v("To create sublevels, we derive the nested nodes:")]),e._v(" "),n("p",[e._v("p / 0 / n")]),e._v(" "),n("p",[e._v("with n ≥ 0.")]),e._v(" "),n("p",[e._v("Each of these nodes can now contain signing key children of their own,\nand again we reserve index 0 to allow deeper nesting.")]),e._v(" "),n("h2",{attrs:{id:"notation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#notation"}},[e._v("#")]),e._v(" Notation")]),e._v(" "),n("p",[e._v("We propose the following shorthand for writing nested node derivations:")]),e._v(" "),n("p",[e._v("p // n instead of p / 0 / n")]),e._v(" "),n("p",[e._v("p //' n instead of p / 0' / n")]),e._v(" "),n("h2",{attrs:{id:"mappings"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mappings"}},[e._v("#")]),e._v(" Mappings")]),e._v(" "),n("p",[e._v("Rather than specifying upfront which path is to be used for a specific\npurpose (i.e. external invoicing vs. internal change), different\napplications can specify arbitrary parent nodes and derivation paths.\nThis allows for nesting of sublevels to arbitrary depth with\napplication-specified semantics. Rather than trying to specify use cases\nupfront, we leave the design completely open-ended. Different\napplications can exchange these mappings for interoperability.\nEventually, if certain mappings become popular, application user\ninterfaces can provide convenient shortcuts or use them as defaults.")]),e._v(" "),n("p",[e._v("Note that BIP32 suggests reserving child 0 for the derivation of signing\nkeys rather than sublevels. It is not really necessary to reserve\nsigning key parents, however, as each key's parent's path can be\nexplicitly stated. But unless we reserve a child for sublevel\nderivation, we lose the ability to nest deeper levels into the\nhierarchy. While we could reserve any arbitrary index for nesting\nsublevels, reserving child 0 seems simplest to implement, leaving all\nindices > 0 for contiguously indexed signing keys. We could also use\nMAX_INDEX (2^31^ - 1) for this purpose. However, we believe doing so\nintroduces more ideosyncracies into the semantics and will present a\nproblem if we ever decide to extend the scheme to use indices larger\nthan 31 bits.")]),e._v(" "),n("h2",{attrs:{id:"use-cases-use-cases"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#use-cases-use-cases"}},[e._v("#")]),e._v(" Use Cases {#use_cases}")]),e._v(" "),n("h3",{attrs:{id:"account-hierarchies-account-hierarchies"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#account-hierarchies-account-hierarchies"}},[e._v("#")]),e._v(" Account Hierarchies {#account_hierarchies}")]),e._v(" "),n("p",[e._v("For all that follows, we assume that key indices k > 0 and parent node\nindices n ≥ 0.")]),e._v(" "),n("p",[e._v("From a master seed m, we can construct a default account using the\nfollowing derivations for nonhardened signing keys:")]),e._v(" "),n("p",[e._v("m / 1 / k (for change/internal outputs)")]),e._v(" "),n("p",[e._v("m / 2 / k (for invoice/external outputs)")]),e._v(" "),n("p",[e._v("To create subaccount a~n~, we use:")]),e._v(" "),n("p",[e._v("a~n~ = m // n")]),e._v(" "),n("p",[e._v("To generate keys for subaccount a~n~, we use:")]),e._v(" "),n("p",[e._v("a~n~ / 1 / k (for change/internal outputs)")]),e._v(" "),n("p",[e._v("a~n~ / 2 / k (for invoice/external outputs)")]),e._v(" "),n("p",[e._v("We can continue creating subaccounts indefinitely using this scheme.")]),e._v(" "),n("h3",{attrs:{id:"bidirectional-payment-channels-bidirectional-payment-channels"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bidirectional-payment-channels-bidirectional-payment-channels"}},[e._v("#")]),e._v(" Bidirectional Payment Channels {#bidirectional_payment_channels}")]),e._v(" "),n("p",[e._v("In order to create a bidirectional payment channel, it is necessary that\nprevious commitments be revokable. In order to revoke previous\ncommitments, each party reveals a secret to the other that would allow\nthem to steal the funds in the channel if a transaction for a previous\ncommitment is inserted into the blockchain.")]),e._v(" "),n("p",[e._v("By allowing for arbitrary nesting of sublevels, we can construct\ndecision trees of arbitrary depth and revoke an entire branch by\nrevealing a parent node used to derive all the children.")]),e._v(" "),n("h2",{attrs:{id:"references"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[e._v("#")]),e._v(" References")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"bip-0032.mediawiki",title:"wikilink"}},[e._v("BIP32 - Hierarchical Deterministic\nWallets")])]),e._v(" "),n("li",[n("a",{attrs:{href:"https://lightning.network/lightning-network-paper.pdf",title:"wikilink",target:"_blank",rel:"noopener noreferrer"}},[e._v("Lightning Network\nWhitepaper"),n("OutboundLink")],1)])]),e._v(" "),n("h2",{attrs:{id:"copyright"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#copyright"}},[e._v("#")]),e._v(" Copyright")]),e._v(" "),n("p",[e._v("This document is placed in the public domain.")])])}),[],!1,null,null,null);t.default=a.exports}}]);