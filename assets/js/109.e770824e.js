(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{483:function(e,t,n){"use strict";n.r(t);var a=n(43),i=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"_73"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_73"}},[e._v("#")]),e._v(" 73")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('  BIP: 73\n  Layer: Applications\n  Title: Use "Accept" header for response type negotiation with Payment Request URLs\n  Author: Stephen Pair <stephen@bitpay.com>\n  Comments-Summary: No comments yet.\n  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0073\n  Status: Final\n  Type: Standards Track\n  Created: 2013-08-27\n')])])]),n("h2",{attrs:{id:"abstract"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),n("p",[e._v("This BIP describes an enhancement to the payment protocol ("),n("a",{attrs:{href:"bip-0070.mediawiki",title:"wikilink"}},[e._v("BIP\n70")]),e._v(") that addresses the need for short\nURLs when scanning from QR codes. It generalizes the specification for\nthe behavior of a payment request URL in a way that allows the client\nand server to negotiate the content of the response using the HTTP\nAccept: header field. Specifically, the client can indicate to the\nserver whether it prefers to receive a bitcoin URI or a payment request.")]),e._v(" "),n("p",[e._v("Implementation of this BIP does not require full payment request ("),n("a",{attrs:{href:"bip-0070.mediawiki",title:"wikilink"}},[e._v("BIP\n70")]),e._v(") support.")]),e._v(" "),n("h2",{attrs:{id:"motivation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[e._v("#")]),e._v(" Motivation")]),e._v(" "),n("p",[e._v('The payment protocol augments the bitcoin: uri scheme with an additional\n"payment" parameter that specifies a URL where a payment request can\nbe downloaded. This creates long URIs that, when rendered as a QR code,\nhave a high information density. Dense QR codes can be difficult to scan\nresulting in a more frustrating user experience. The goal is to create a\nstandard that would allow QR scanning wallets to use less dense QR\ncodes. It also makes general purpose QR code scanners more usable with\nbitcoin accepting websites.')]),e._v(" "),n("h2",{attrs:{id:"specification"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#specification"}},[e._v("#")]),e._v(" Specification")]),e._v(" "),n("p",[e._v("QR scanning wallets will consider a non bitcoin URI scanned from a QR\ncode to be an end point where either a bitcoin URI or a payment request\ncan be obtained.")]),e._v(" "),n("p",[e._v("A wallet client uses the Accept: HTTP header to specify whether it can\naccept a payment request, a URI, or both. A media type of text/uri-list\nspecifies that the client accepts a bitcoin URI. A media type of\napplication/bitcoin-paymentrequest specifies that the client can process\na payment request. In the absence of an Accept: header, the server is\nexpected to respond with text/html suitable for rendering in a browser.\nAn HTML response will ensure that QR codes scanned by non Bitcoin wallet\nQR scanners are useful (they could render an HTML page with a payment\nlink that when clicked would open a wallet on the device).")]),e._v(" "),n("p",[e._v("It is not required that the client and server support the full semantics\nof an HTTP Accept header. If application/bitcoin-paymentrequest is\nspecified in the header, the server should send a payment request\nregardless of anything else specified in the Accept header. If\ntext/uri-list is specified (but not application/bitcoin-paymentrequest),\na valid Bitcoin URI should be returned. If neither is specified, the\nserver can return an HTML page. When a uri-list is returned only the\nfirst item in the list is used (and expected to be a bitcoin URI), any\nadditional URIs should be ignored.")]),e._v(" "),n("h2",{attrs:{id:"compatibility"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#compatibility"}},[e._v("#")]),e._v(" Compatibility")]),e._v(" "),n("p",[e._v("Only QR scanning wallets that implement this BIP will be able to process\nQR codes containing payment request URLs. There are two possible\nworkarounds for QR scanning wallets that do not implement this BIP: 1)\nthe server gives the user an option to change the QR code to a bitcoin:\nURI or 2) the user scans the code with a generic QR code scanner.")]),e._v(" "),n("p",[e._v("In the second scenario, if the server responds with a webpage containing\na link to a bitcoin URI, the user can complete the payment by clicking\nthat link provided the user has a wallet installed on their device and\nit supports bitcoin URIs. If the wallet/device does not have support for\nbitcoin URIs, the user can fall back on address copy/paste.")]),e._v(" "),n("p",[e._v("This BIP should be fully compatible with BIP 70 assuming it is required\nthat wallets implementing BIP 70 make use of the Accept: HTTP header\nwhen retrieving a payment request.")]),e._v(" "),n("h2",{attrs:{id:"examples"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),n("p",[e._v("The first image below is of a bitcoin URI with an amount and payment\nrequest specified (note, this is a fairly minimal URI as it does not\ncontain a label and the request URL is of moderate size). The second\nimage is a QR code with only the payment request url specified.")]),e._v(" "),n("p",[n("code",[e._v("<img src=bip-0073/a.png>")]),e._v(" "),n("code",[e._v("</img>")]),e._v(" "),n("code",[e._v("<img src=bip-0073/b.png>")]),e._v(" "),n("code",[e._v("</img>")])])])}),[],!1,null,null,null);t.default=i.exports}}]);