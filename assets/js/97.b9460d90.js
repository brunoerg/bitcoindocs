(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{472:function(e,t,s){"use strict";s.r(t);var n=s(43),i=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"_60"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_60"}},[e._v("#")]),e._v(" 60")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v('  BIP: 60\n  Layer: Peer Services\n  Title: Fixed Length "version" Message (Relay-Transactions Field)\n  Author: Amir Taaki <genjix@riseup.net>\n  Comments-Summary: Discouraged for implementation (one person)\n  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0060\n  Status: Draft\n  Type: Standards Track\n  Created: 2013-06-16\n  License: PD\n')])])]),s("h2",{attrs:{id:"abstract"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),s("p",[s("a",{attrs:{href:"BIP_0037",title:"wikilink"}},[e._v("BIP 0037")]),e._v(" introduced a new flag to version\nmessages which says whether to relay new transaction messages to that\nnode.")]),e._v(" "),s("p",[e._v("The protocol version was upgraded to 70001, and the (now accepted) BIP\n0037 became implemented.")]),e._v(" "),s("p",[e._v("The implementation is problematic because the RelayTransactions flag is\nan optional part of the version message stream.")]),e._v(" "),s("h2",{attrs:{id:"motivation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[e._v("#")]),e._v(" Motivation")]),e._v(" "),s("p",[e._v("One property of Bitcoin messages is their fixed number of fields. This\nkeeps the format simple and easily understood. Adding optional fields to\nmessages will cause deserialisation issues when other fields come after\nthe optional one.")]),e._v(" "),s("p",[e._v("As an example, the length of version messages might be checked to ensure\nthe byte stream is consistent. With optional fields, this checking is no\nlonger possible. This is desirable to check for consistency inside\ninternal deserialization code, and proper formatting of version messages\noriginating from other nodes. In the future with diversification of the\nBitcoin network, it will become desirable to enforce this kind of strict\nadherance to standard messages with field length compliance with every\nprotocol version.")]),e._v(" "),s("p",[e._v("Another property of fixed-length field messages is the ability to pass\nstream operators around for deserialization. This property is also lost,\nas now the deserialisation code must know the remaining length of bytes\nto parse. The parser now requires an additional piece of information\n(remaining size of the stream) for parsing instead of being a dumb\nreader.")]),e._v(" "),s("h2",{attrs:{id:"specification"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#specification"}},[e._v("#")]),e._v(" Specification")]),e._v(" "),s("h3",{attrs:{id:"version"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#version"}},[e._v("#")]),e._v(" version")]),e._v(" "),s("p",[e._v("When a node creates an outgoing connection, it will immediately\nadvertise its version. The remote node will respond with its version. No\nfuther communication is possible until both peers have exchanged their\nversion.")]),e._v(" "),s("p",[e._v("Payload:")]),e._v(" "),s("p",[e._v("Field Size        Description    Data type   Comments")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("4                 version        int32_t     Identifies protocol version being used by the node\n8                 services       uint64_t    bitfield of features to be enabled for this connection\n8                 timestamp      int64_t     standard UNIX timestamp in seconds\n26                addr_recv      net_addr    The network address of the node receiving this message\nversion >= 106"),s("br"),e._v("\n26                addr_from      net_addr    The network address of the node emitting this message\n8                 nonce          uint64_t    Node random nonce, randomly generated every time a version packet is sent. This nonce is used to detect connections to self.\n?                 user_agent     var_str     "),s("a",{attrs:{href:"bip-0014.mediawiki",title:"wikilink"}},[e._v("User Agent")]),e._v(" (0x00 if string is 0 bytes long)\n4                 start_height   int32_t     The last block received by the emitting node\n1                 relay          bool        Whether the remote peer should announce relayed transactions or not, see "),s("a",{attrs:{href:"bip-0037.mediawiki",title:"wikilink"}},[e._v("BIP 0037")]),e._v(", since version >= 70001")]),e._v(" "),s("p",[e._v('A "verack" packet shall be sent if the version packet was accepted.')]),e._v(" "),s("p",[e._v("The following services are currently assigned:")]),e._v(" "),s("p",[e._v("Value   Name           Description")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("1       NODE_NETWORK   This node can be asked for full blocks instead of just headers.")]),e._v(" "),s("h3",{attrs:{id:"code-updates-code-updates"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#code-updates-code-updates"}},[e._v("#")]),e._v(" Code Updates {#code_updates}")]),e._v(" "),s("p",[e._v("fRelayTx is added to the PushMessage() call inside PushVersion()\n(net.cpp)")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v('void CNode::PushVersion()\n{\n    /// when NTP implemented, change to just nTime = GetAdjustedTime()\n    int64 nTime = (fInbound ? GetAdjustedTime() : GetTime());\n    CAddress addrYou = (addr.IsRoutable() && !IsProxy(addr) ? addr : CAddress(CService("0.0.0.0",0)));\n    CAddress addrMe = GetLocalAddress(&addr);\n    RAND_bytes((unsigned char*)&nLocalHostNonce, sizeof(nLocalHostNonce));\n    printf("send version message: version %d, blocks=%d, us=%s, them=%s, peer=%s\\n", PROTOCOL_VERSION, nBestHeight, addrMe.ToString().c_str(), addrYou.ToString().c_str(), addr.ToString().c_str());\n    PushMessage("version", PROTOCOL_VERSION, nLocalServices, nTime, addrYou, addrMe,\n                nLocalHostNonce, FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, std::vector<string>()),\n                nBestHeight, true);\n}\n')])])]),s("p",[e._v("Additionally the protocol version is increased from 70001 to 70002.")]),e._v(" "),s("h2",{attrs:{id:"copyright"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#copyright"}},[e._v("#")]),e._v(" Copyright")]),e._v(" "),s("p",[e._v("This document is placed in the public domain.")])])}),[],!1,null,null,null);t.default=i.exports}}]);