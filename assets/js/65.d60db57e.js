(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{439:function(e,t,r){"use strict";r.r(t);var n=r(43),i=Object(n.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"_159"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_159"}},[e._v("#")]),e._v(" 159")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("  BIP: 159\n  Layer: Peer Services\n  Title: NODE_NETWORK_LIMITED service bit\n  Author: Jonas Schnelli <dev@jonasschnelli.ch>\n  Comments-Summary: No comments yet.\n  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0159\n  Status: Draft\n  Type: Standards Track\n  Created: 2017-05-11\n  License: BSD-2-Clause\n")])])]),r("h2",{attrs:{id:"abstract"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),r("p",[e._v("Define a service bit that allow pruned peers to signal their limited\nservices")]),e._v(" "),r("h2",{attrs:{id:"motivation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[e._v("#")]),e._v(" Motivation")]),e._v(" "),r("p",[e._v("Pruned peers can offer the same services as traditional peer except of\nserving all historical blocks. Bitcoin right now only offers the\nNODE_NETWORK service bit which indicates that a peer can serve all\nhistorical blocks.")]),e._v(" "),r("ol",[r("li",[e._v("Pruned peers can relay blocks, headers, transactions, addresses and\ncan serve a limited number of historical blocks, thus they should\nhave a way how to announce their service(s)")]),e._v(" "),r("li",[e._v("Peers no longer in initial block download should consider connecting\nsome of its outbound connections to pruned peers to allow other\npeers to bootstrap from non-pruned peers")])]),e._v(" "),r("h2",{attrs:{id:"specification"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#specification"}},[e._v("#")]),e._v(" Specification")]),e._v(" "),r("h3",{attrs:{id:"new-service-bit-new-service-bit"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#new-service-bit-new-service-bit"}},[e._v("#")]),e._v(" New service bit {#new_service_bit}")]),e._v(" "),r("p",[e._v("This BIP proposes a new service bit")]),e._v(" "),r("hr"),e._v(" "),r("p",[e._v("NODE_NETWORK_LIMITED   bit 10 (0x400)   If signaled, the peer "),r("code",[e._v("<I>")]),e._v(" MUST"),r("code",[e._v("</I>")]),e._v("  be capable of serving at least the last 288 blocks (~2 days).")]),e._v(" "),r("hr"),e._v(" "),r("p",[e._v("A safety buffer of 144 blocks to handle chain reorganizations\n"),r("code",[e._v("<I>")]),e._v(" SHOULD"),r("code",[e._v("</I>")]),e._v("  be taken into account when connecting to\na peer signaling the "),r("code",[e._v("NODE_NETWORK_LIMITED")]),e._v(" service bit.")]),e._v(" "),r("h3",{attrs:{id:"address-relay-address-relay"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#address-relay-address-relay"}},[e._v("#")]),e._v(" Address relay {#address_relay}")]),e._v(" "),r("p",[e._v("Full nodes following this BIP "),r("code",[e._v("<I>")]),e._v(" SHOULD"),r("code",[e._v("</I>")]),e._v("  relay\naddress/services ("),r("code",[e._v("addr")]),e._v(" message) from peers they would connect to\n(including peers signaling "),r("code",[e._v("NODE_NETWORK_LIMITED")]),e._v(").")]),e._v(" "),r("h3",{attrs:{id:"counter-measures-for-peer-fingerprinting-counter-measures-for-peer-fingerprinting"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#counter-measures-for-peer-fingerprinting-counter-measures-for-peer-fingerprinting"}},[e._v("#")]),e._v(" Counter-measures for peer fingerprinting {#counter_measures_for_peer_fingerprinting}")]),e._v(" "),r("p",[e._v("Peers may have different prune depths (depending on the peers\nconfiguration, disk space, etc.) which can result in a fingerprinting\nweakness (finding the prune depth through getdata requests).\nNODE_NETWORK_LIMITED supporting peers "),r("code",[e._v("<I>")]),e._v(" SHOULD"),r("code",[e._v("</I>")]),e._v("\navoid leaking the prune depth and therefore not serve blocks deeper than\nthe signaled "),r("code",[e._v("NODE_NETWORK_LIMITED")]),e._v(" threshold (288 blocks).")]),e._v(" "),r("h3",{attrs:{id:"risks"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#risks"}},[e._v("#")]),e._v(" Risks")]),e._v(" "),r("p",[e._v("Pruned peers following this BIP may consume more outbound bandwidth.")]),e._v(" "),r("p",[e._v("Light clients (and such) who are not checking the "),r("code",[e._v("nServiceFlags")]),e._v("\n(service bits) from a relayed "),r("code",[e._v("addr")]),e._v("-message may unwillingly connect to\na pruned peer and ask for (filtered) blocks at a depth below their\npruned depth. Light clients should therefore check the service bits (and\neventually connect to peers signaling "),r("code",[e._v("NODE_NETWORK_LIMITED")]),e._v(" if they\nrequire [filtered] blocks around the tip). Light clients obtaining\npeer IPs though DNS seed should use the DNS filtering option.")]),e._v(" "),r("h2",{attrs:{id:"compatibility"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#compatibility"}},[e._v("#")]),e._v(" Compatibility")]),e._v(" "),r("p",[e._v("This proposal is backward compatible.")]),e._v(" "),r("h2",{attrs:{id:"reference-implementation-reference-implementation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#reference-implementation-reference-implementation"}},[e._v("#")]),e._v(" Reference implementation {#reference_implementation}")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/pull/11740",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/bitcoin/bitcoin/pull/11740"),r("OutboundLink")],1),e._v(" (signaling)")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/pull/10387",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/bitcoin/bitcoin/pull/10387"),r("OutboundLink")],1),e._v(" (connection and\nrelay)")])]),e._v(" "),r("h2",{attrs:{id:"copyright"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#copyright"}},[e._v("#")]),e._v(" Copyright")]),e._v(" "),r("p",[e._v("This BIP is licensed under the 2-clause BSD license.")])])}),[],!1,null,null,null);t.default=i.exports}}]);