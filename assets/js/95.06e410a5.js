(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{562:function(e,t,a){"use strict";a.r(t);var i=a(43),s=Object(i.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"_49"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_49"}},[e._v("#")]),e._v(" 49")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("  BIP: 49\n  Layer: Applications\n  Title: Derivation scheme for P2WPKH-nested-in-P2SH based accounts\n  Author: Daniel Weigl <DanielWeigl@gmx.at>\n  Comments-Summary: No comments yet.\n  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0049\n  Status: Final\n  Type: Informational\n  Created: 2016-05-19\n  License: PD\n")])])]),a("h2",{attrs:{id:"abstract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),a("p",[e._v("This BIP defines the derivation scheme for HD wallets using the\nP2WPKH-nested-in-P2SH ("),a("a",{attrs:{href:"bip-0141.mediawiki",title:"wikilink"}},[e._v("BIP 141")]),e._v(")\nserialization format for segregated witness transactions.")]),e._v(" "),a("h2",{attrs:{id:"motivation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[e._v("#")]),e._v(" Motivation")]),e._v(" "),a("p",[e._v("With the usage of P2WPKH-nested-in-P2SH ("),a("a",{attrs:{href:"bip-0141.mediawiki#p2wpkh-nested-in-bip16-p2sh",title:"wikilink"}},[e._v("BIP\n141")]),e._v(")\ntransactions it is necessary to have a common derivation scheme. It\nallows the user to use different HD wallets with the same masterseed\nand/or a single account seamlessly.")]),e._v(" "),a("p",[e._v("Thus the user needs to create dedicated segregated witness accounts,\nwhich ensures that only wallets compatible with this BIP will detect the\naccounts and handle them appropriately.")]),e._v(" "),a("h3",{attrs:{id:"considerations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#considerations"}},[e._v("#")]),e._v(" Considerations")]),e._v(" "),a("p",[e._v("Two generally different approaches are possible for current BIP44\ncapable wallets:")]),e._v(" "),a("p",[e._v("1) Allow the user to use the same account(s) that they already use, but\nadd segregated witness encoded addresses to it.")]),e._v(" "),a("p",[e._v("1.1) Use the same public keys as defined in BIP44, but in addition to\nthe normal P2PKH address also derive the P2SH address from it.")]),e._v(" "),a("p",[e._v("1.2) Use the same account root, but branch off and derive different\nexternal and internal chain roots to derive dedicated public keys for\nthe segregated witness addresses.")]),e._v(" "),a("p",[e._v("2) Create dedicated accounts used only for segregated witness\naddresses.")]),e._v(" "),a("p",[e._v("The solutions from point 1 have a common disadvantage: if a user\nimports/recovers a BIP49-compatible wallet masterseed into/in a\nnon-BIP49-compatible wallet, the account might show up but also it might\nmiss some UTXOs.")]),e._v(" "),a("p",[e._v("Therefore this BIP uses solution 2, which fails in a more visible way.\nEither the account shows up or not at all. The user does not have to\ncheck his balance after using the same seed in different wallets.")]),e._v(" "),a("h2",{attrs:{id:"specifications"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#specifications"}},[e._v("#")]),e._v(" Specifications")]),e._v(" "),a("p",[e._v("This BIP defines the two needed steps to derive multiple deterministic\naddresses based on a "),a("a",{attrs:{href:"bip-0032.mediawiki",title:"wikilink"}},[e._v("BIP 32")]),e._v(" root\naccount.")]),e._v(" "),a("h3",{attrs:{id:"public-key-derivation-public-key-derivation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-key-derivation-public-key-derivation"}},[e._v("#")]),e._v(" Public key derivation {#public_key_derivation}")]),e._v(" "),a("p",[e._v("To derive a public key from the root account, this BIP uses the same\naccount-structure as defined in "),a("a",{attrs:{href:"bip-0044.mediawiki",title:"wikilink"}},[e._v("BIP 44")]),e._v(",\nbut only uses a different purpose value to indicate the different\ntransaction serialization method.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("m / purpose' / coin_type' / account' / change / address_index\n")])])]),a("p",[e._v("For the `purpose`-path level it uses `49'`. The rest of the levels\nare used as defined in BIP44.")]),e._v(" "),a("h3",{attrs:{id:"address-derivation-address-derivation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#address-derivation-address-derivation"}},[e._v("#")]),e._v(" Address derivation {#address_derivation}")]),e._v(" "),a("p",[e._v("To derive the P2SH address from the above calculated public key, we use\nthe encapsulation defined in "),a("a",{attrs:{href:"bip-0141.mediawiki#p2wpkh-nested-in-bip16-p2sh",title:"wikilink"}},[e._v("BIP\n141")]),e._v(":")]),e._v(" "),a("p",[a("code",[e._v("witness:      <signature> <pubkey>")]),a("br"),e._v(" "),a("code",[e._v("scriptSig:    <0 <20-byte-key-hash>>")]),a("br"),e._v(" "),a("code",[e._v("(0x160014{20-byte-key-hash})")]),a("br"),e._v(" "),a("code",[e._v("scriptPubKey: HASH160 <20-byte-script-hash> EQUAL")]),a("br"),e._v(" "),a("code",[e._v("(0xA914{20-byte-script-hash}87)")])]),e._v(" "),a("h3",{attrs:{id:"extended-key-version-extended-key-version"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extended-key-version-extended-key-version"}},[e._v("#")]),e._v(" Extended Key Version {#extended_key_version}")]),e._v(" "),a("p",[e._v("When serializing extended keys, this scheme uses alternate version\nbytes. Extended public keys use "),a("code",[e._v("0x049d7cb2")]),e._v(' to produce a "ypub"\nprefix, and private keys use '),a("code",[e._v("0x049d7878")]),e._v(' to produce a "yprv" prefix.\nTestnet uses '),a("code",[e._v("0x044a5262")]),e._v(' "upub" and '),a("code",[e._v("0x044a4e28")]),e._v(' "uprv."')]),e._v(" "),a("p",[e._v("Additional registered version bytes are listed in\n"),a("a",{attrs:{href:"https://github.com/satoshilabs/slips/blob/master/slip-0132.md",title:"wikilink",target:"_blank",rel:"noopener noreferrer"}},[e._v("SLIP-0132"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"backwards-compatibility-backwards-compatibility"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#backwards-compatibility-backwards-compatibility"}},[e._v("#")]),e._v(" Backwards Compatibility {#backwards_compatibility}")]),e._v(" "),a("p",[e._v("This BIP is not backwards compatible by design as described under\n"),a("a",{attrs:{href:"#considerations",title:"wikilink"}},[e._v("considerations")]),e._v(". An incompatible wallet\nwill not discover accounts at all and the user will notice that\nsomething is wrong.")]),e._v(" "),a("h2",{attrs:{id:"test-vectors-test-vectors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test-vectors-test-vectors"}},[e._v("#")]),e._v(" Test vectors {#test_vectors}")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("  masterseedWords = abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about\n  masterseed = uprv8tXDerPXZ1QsVNjUJWTurs9kA1KGfKUAts74GCkcXtU8GwnH33GDRbNJpEqTvipfCyycARtQJhmdfWf8oKt41X9LL1zeD2pLsWmxEk3VAwd (testnet)\n\n  // Account 0, root = m/49'/1'/0'\n  account0Xpriv = uprv91G7gZkzehuMVxDJTYE6tLivdF8e4rvzSu1LFfKw3b2Qx1Aj8vpoFnHdfUZ3hmi9jsvPifmZ24RTN2KhwB8BfMLTVqaBReibyaFFcTP1s9n (testnet)\n  account0Xpub = upub5EFU65HtV5TeiSHmZZm7FUffBGy8UKeqp7vw43jYbvZPpoVsgU93oac7Wk3u6moKegAEWtGNF8DehrnHtv21XXEMYRUocHqguyjknFHYfgY (testnet)\n\n  // Account 0, first receiving private key = m/49'/1'/0'/0/0\n  account0recvPrivateKey = cULrpoZGXiuC19Uhvykx7NugygA3k86b3hmdCeyvHYQZSxojGyXJ\n  account0recvPrivateKeyHex = 0xc9bdb49cfbaedca21c4b1f3a7803c34636b1d7dc55a717132443fc3f4c5867e8\n  account0recvPublickKeyHex = 0x03a1af804ac108a8a51782198c2d034b28bf90c8803f5a53f76276fa69a4eae77f\n\n  // Address derivation\n  keyhash = HASH160(account0recvPublickKeyHex) = 0x38971f73930f6c141d977ac4fd4a727c854935b3\n  scriptSig = <0 <keyhash>> = 0x001438971f73930f6c141d977ac4fd4a727c854935b3\n  addressBytes = HASH160(scriptSig) = 0x336caa13e08b96080a32b5d818d59b4ab3b36742\n\n  // addressBytes base58check encoded for testnet\n  address = base58check(prefix | addressBytes) = 2Mww8dCYPUpKHofjgcXcBCEGmniw9CoaiD2 (testnet)\n")])])]),a("h2",{attrs:{id:"reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[e._v("#")]),e._v(" Reference")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"bip-0016.mediawiki",title:"wikilink"}},[e._v("BIP16 - Pay to Script Hash")])]),e._v(" "),a("li",[a("a",{attrs:{href:"bip-0032.mediawiki",title:"wikilink"}},[e._v("BIP32 - Hierarchical Deterministic\nWallets")])]),e._v(" "),a("li",[a("a",{attrs:{href:"bip-0043.mediawiki",title:"wikilink"}},[e._v("BIP43 - Purpose Field for Deterministic\nWallets")])]),e._v(" "),a("li",[a("a",{attrs:{href:"bip-0044.mediawiki",title:"wikilink"}},[e._v("BIP44 - Multi-Account Hierarchy for Deterministic\nWallets")])]),e._v(" "),a("li",[a("a",{attrs:{href:"bip-0141.mediawiki",title:"wikilink"}},[e._v("BIP141 - Segregated Witness (Consensus\nlayer)")])])]),e._v(" "),a("h2",{attrs:{id:"copyright"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copyright"}},[e._v("#")]),e._v(" Copyright")]),e._v(" "),a("p",[e._v("This document is placed in the public domain.")])])}),[],!1,null,null,null);t.default=s.exports}}]);