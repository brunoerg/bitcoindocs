(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{559:function(e,t,n){"use strict";n.r(t);var a=n(43),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"errata-and-details-david-a-harding"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#errata-and-details-david-a-harding"}},[e._v("#")]),e._v(" Errata and Details (David A. Harding)")]),e._v(" "),n("p",[n("em",[e._v("A description of known problems in Satoshi Nakamoto's paper, \"Bitcoin:\nA Peer-to-Peer Electronic Cash System\", as well as notes on terminology\nchanges and how Bitcoin's implementation differs from that described in\nthe paper.")])]),e._v(" "),n("h2",{attrs:{id:"abstract"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),n("blockquote",[n("p",[e._v("The longest chain not only serves as proof of the sequence of events\nwitnessed, but proof that it came from the largest pool of CPU power.")])]),e._v(" "),n("ul",[n("li",[n("p",[n("strong",[e._v("Implementation detail:")]),e._v(' If each link in the chain (called "blocks"\nin Bitcoin) was built using the same amount of Proof Of Work (POW),\nthe longest chain would be the one backed by the largest pool of\ncomputational power.  However, Bitcoin was implemented in such a way\nthat the amount of POW can vary between blocks, so it became important\nnot to check for the "the longest chain" but rather "the chain\ndemonstrating the most POW"; this is often shortened to "strongest\nchain".')]),e._v(" "),n("p",[e._v("The "),n("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/commit/40cd0369419323f8d7385950e20342e998c994e1#diff-623e3fd6da1a45222eeec71496747b31R420",target:"_blank",rel:"noopener noreferrer"}},[e._v("change"),n("OutboundLink")],1),e._v(" from checking for the longest chain to\nchecking for the most-work chain occurred in July 2010, long after\nBitcoin's initial release:")]),e._v(" "),n("div",{staticClass:"language-diff line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-diff"}},[n("code",[n("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[n("span",{pre:!0,attrs:{class:"token prefix deleted"}},[e._v("-")]),n("span",{pre:!0,attrs:{class:"token line"}},[e._v("    if (pindexNew->nHeight > nBestHeight)\n")])]),n("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[n("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),n("span",{pre:!0,attrs:{class:"token line"}},[e._v("    if (pindexNew->bnChainWork > bnBestChainWork)\n")])])])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("Terminology change:")]),e._v(' General CPUs were used to generate the POW for\nthe earliest Bitcoin blocks but POW generation today is mostly\nperformed by specialist Application Specific Integrated Circuits\n(ASICs), so instead of saying "CPU power" it is perhaps more correct\nto say "computational power" or, simply, "hash rate" for the hashing\nused in generating the POW.')])])]),e._v(" "),n("blockquote",[n("p",[e._v("As long as a majority of CPU power is controlled by nodes that are not\ncooperating to attack the network, they'll generate the longest chain\nand outpace attackers.")])]),e._v(" "),n("ul",[n("li",[n("p",[n("strong",[e._v("Terminology change:")]),e._v(' The term "nodes" today is used to refer to\nfull validation nodes, which are programs that enforce all the rules\nof the system.  Programs (and hardware) that extend the chain today\nare called "miners" based on Nakamoto\'s analogy to gold miners in\nsection 6 of the paper.  Nakamoto expected all miners to be nodes\nbut the software he released did not require all nodes to be miners.\nToday it is the case that the overwhelming number of nodes are not\nminers and that many individuals who own mining hardware do not use it\nwith their own nodes (and even those that do often mine for short\nperiods of time on top of newly discovered blocks without ensuring\ntheir node considers the new block valid).  The early parts of the\npaper where "nodes" is mostly used without modification refer to\nmining using a full validation node; the later parts of the paper\nwhich refer to "network nodes" is mainly about what nodes can do even\nif they aren\'t mining.')])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("Post-publication discovery:")]),e._v(" When a new block is produced, the\nminer who produces that block can begin working on its sequel\nimmediately but all other miners must wait for that new block to\npropagate across the network to them.  This gives miners who produce\nmany blocks an edge over miners who produce fewer blocks, and this can\nbe exploited in what's known as the "),n("em",[e._v("selfish mining attack")]),e._v(' to allow\nan attacker with around 30% of total network hash rate to make other\nminers less profitable, perhaps driving them into following the\nattacking miner\'s policy.  So instead of saying "a majority of CPU\npower is controlled by nodes that are not cooperating to attack the\nnetwork" it is perhaps more correct to say "as long as nodes\ncooperating to attack the network control less than about 30% of the\nnetwork".')])])]),e._v(" "),n("h2",{attrs:{id:"_2-transactions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-transactions"}},[e._v("#")]),e._v(" 2. Transactions")]),e._v(" "),n("blockquote",[n("p",[e._v("We define an electronic coin as a chain of digital signatures.  Each\nowner transfers the coin to the next by digitally signing a hash of\nthe previous transaction and the public key of the next owner and\nadding these to the end of the coin.")])]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Implementation detail:")]),e._v(' Bitcoin implements a more general version\nof this system where digital signatures are not used directly but\nrather a "deterministic expression" is used instead.  Just as a\nsignature that matches a know public key can be used to enable a\npayment, the data that satisfies an known expression can also enable a\npayment.  Generically, the expression that must be satisfied in\nBitcoin in order to spend a coin is known as an "encumbrance".  Almost\nall encumbrances in Bitcoin to date require providing at least one\nsignature.  So instead of saying "a chain of digital signatures" it is\nmore correct to say "a chain of encumbrances".')])]),e._v(" "),n("h2",{attrs:{id:"_4-proof-of-work"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-proof-of-work"}},[e._v("#")]),e._v(" 4. Proof-of-Work")]),e._v(" "),n("blockquote",[n("p",[e._v("we implement the proof-of-work by incrementing a nonce in the block\nuntil a value is found that gives the block's hash the required zero\nbits.")])]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Implementation detail:")]),e._v(" Adam Back's Hashcash implementation\nrequires finding a hash with the required number of leading zero bits.\nBitcoin treats the hash as a integer and requires that it be less than\na specified integer, which effectively allows a fractional number of\nbits to be specified.")])]),e._v(" "),n("blockquote",[n("p",[e._v("Proof-of-work is essentially one-CPU-one-vote.")])]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Important note:")]),e._v(' the vote here is not on the rules of the system\nbut merely on the ordering of the transactions in order to provide\nassurances that an "electronic coin" cannot be easily double spent.\nThis is described in more detail in section 11 of the paper where it\nsays, "We consider the scenario of an attacker trying to generate an\nalternate chain faster than the honest chain.  Even if this is\naccomplished, it does not throw the system open to arbitrary changes,\nsuch as creating value out of thin air or taking money that never\nbelonged to the attacker.  Nodes are not going to accept an invalid\ntransaction as payment, and honest nodes will never accept a block\ncontaining them."')])]),e._v(" "),n("blockquote",[n("p",[e._v("proof-of-work difficulty is determined by a moving average targeting\nan average number of blocks per hour.")])]),e._v(" "),n("ul",[n("li",[n("p",[n("strong",[e._v("Implementation detail:")]),e._v("  A moving average is not used.  Instead,\nevery 2,016th block has its reported generation time compared to the\ngeneration time for an earlier block, and the difference between them\nis used to calculate the average used for adjustment.")]),e._v(" "),n("p",[e._v("Further, the average implemented in Bitcoin targets an average\nnumber of blocks per two weeks (not per hour as might be implied by\nthe text).  Other implemented rules may further slow adjustments,\nsuch as a rule that the adjustment can not increase block production\nspeed by more than 300% per period, nor slow it by more than 75%.")])])]),e._v(" "),n("h2",{attrs:{id:"_7-reclaiming-disk-space"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-reclaiming-disk-space"}},[e._v("#")]),e._v(" 7. Reclaiming Disk Space")]),e._v(" "),n("blockquote",[n("p",[e._v("Once the latest transaction in a coin is buried under enough blocks,\nthe spent transactions before it can be discarded to save disk space")])]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Possible post-publication discovery:")]),e._v(" Although the Merkle Tree\nstructure described in this section can prove a transaction was\nincluded in a particular block, there is currently no way in Bitcoin\nto prove that a transaction has not been spent except to process all\nsubsequent data in the blockchain.  This means the method described\nhere cannot be universally used for reclaiming disk space among all\nnodes, as all new nodes will need to process all transactions.")])]),e._v(" "),n("h2",{attrs:{id:"_8-simplified-payment-verification"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-simplified-payment-verification"}},[e._v("#")]),e._v(" 8. Simplified Payment Verification")]),e._v(" "),n("blockquote",[n("p",[e._v("One strategy to protect against this would be to accept alerts from\nnetwork nodes when they detect an invalid block, prompting the user's\nsoftware to download the full block and alerted transactions to\nconfirm the inconsistency.")])]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Important Note:")]),e._v(" although software has been produced that\nimplements some parts of this section and calls that Simplified\nPayment Verification (SPV), none of these programs currently accepts\nalerts from network nodes (full validation nodes) when invalid blocks\nhave been detected.  This has placed bitcoins in so-called SPV wallets\nat risk in the past.")])]),e._v(" "),n("h2",{attrs:{id:"_10-privacy"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_10-privacy"}},[e._v("#")]),e._v(" 10. Privacy")]),e._v(" "),n("blockquote",[n("p",[e._v("Some linking is still unavoidable with multi-input transactions, which\nnecessarily reveal that their inputs were owned by the same owner")])]),e._v(" "),n("ul",[n("li",[n("p",[n("strong",[e._v("Post-publication invention:")]),e._v(" the revelation of a common owner for\ndifferent inputs isn't necessary if owners often mix their inputs with\ninputs belonging to other owners.  For example, there's no public\ndifference between Alice and Bob each contributing one of their inputs\ntowards paying Charlie and Dan than there is between just Alice\ncontributing two of her inputs towards paying Charlie and Dan.")]),e._v(" "),n("p",[e._v("This technique is known today as "),n("a",{attrs:{href:"https://en.bitcoin.it/wiki/CoinJoin",target:"_blank",rel:"noopener noreferrer"}},[e._v("CoinJoin"),n("OutboundLink")],1),e._v(" and software\nimplementing it has been in use since 2015.")])])]),e._v(" "),n("h2",{attrs:{id:"_11-calculations"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_11-calculations"}},[e._v("#")]),e._v(" 11. Calculations")]),e._v(" "),n("blockquote",[n("p",[e._v("The receiver generates a new key pair and gives the public key to the\nsender shortly before signing.  This prevents the sender from\npreparing a chain of blocks ahead of time by working on it\ncontinuously until he is lucky enough to get far enough ahead, then\nexecuting the transaction at that  moment.")])]),e._v(" "),n("ul",[n("li",[n("p",[n("strong",[e._v("Post-publication discovery:")]),e._v(" nothing about the receiver generating\na public key shortly before the spender signs a transaction prevents\nthe spender from preparing a chain of blocks ahead of time.  Early\nBitcoin user Hal Finney discovered this attack and "),n("a",{attrs:{href:"https://bitcointalk.org/index.php?topic=3441.msg48384#msg48384",target:"_blank",rel:"noopener noreferrer"}},[e._v("described\nit"),n("OutboundLink")],1),e._v(': "Suppose the attacker is generating blocks\noccasionally. in each block he generates, he includes a transfer from\naddress A to address B, both of which he controls.')]),e._v(" "),n("p",[e._v("\"To cheat you, when he generates a block, he doesn't broadcast it.\nInstead, he runs down to your store and makes a payment to your\naddress C with his address A. You wait a few seconds, don't hear\nanything, and transfer the goods. He broadcasts his block now, and\nhis transaction will take precedence over yours.\"")]),e._v(" "),n("p",[e._v("The attack works for any number of confirmations, and is sometimes\nnamed the Finney Attack.")])])]),e._v(" "),n("hr"),e._v(" "),n("p",[n("strong",[e._v("Disclaimer:")]),e._v(" the author of this document was not the first person to\nidentify any of the problems described here---he has merely collected\nthem into a single document.")]),e._v(" "),n("p",[n("strong",[e._v("Updates:")])]),e._v(" "),n("ul",[n("li",[n("p",[e._v("2018-06-14: Link to the commit where Nakamoto changed the consensus\nconvergence mechanism from greatest-height to most-work.  Credit for\n"),n("a",{attrs:{href:"https://github.com/bitcoin-dot-org/bitcoin.org/issues/1325#issuecomment-230154542",target:"_blank",rel:"noopener noreferrer"}},[e._v("commit\narchaeology"),n("OutboundLink")],1),e._v("\nto Gregory Maxwell.")])]),e._v(" "),n("li",[n("p",[e._v("2018-06-14: A moving average is not used.  Mentioned on an IRC channel\nwhere logging is disallowed.")])]),e._v(" "),n("li",[n("p",[e._v("2018-06-14: Late key distribution does not prevent attackers from\npreparing forks, e.g. the Finney Attack.  Mentioned by Kalle Rosenbaum\n"),n("a",{attrs:{href:"https://twitter.com/kallerosenbaum/status/999916373055684609",target:"_blank",rel:"noopener noreferrer"}},[e._v("on\nTwitter"),n("OutboundLink")],1),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("2018-06-14: Inputs being spent in the same transaction does not\nnecessarily lead to a privacy degradation thanks to Coinjoin.\nMentioned by Chris Belcher in a "),n("a",{attrs:{href:"https://gist.github.com/harding/dabea3d83c695e6b937bf090eddf2bb3#gistcomment-1983379",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub\ncomment"),n("OutboundLink")],1),e._v(".")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);