(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{514:function(e,t,i){"use strict";i.r(t);var a=i(43),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"_0-13-1"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_0-13-1"}},[e._v("#")]),e._v(" 0.13.1")]),e._v(" "),i("p",[e._v("Bitcoin Core version 0.13.1 is now available from:")]),e._v(" "),i("p",[i("a",{attrs:{href:"https://bitcoin.org/bin/bitcoin-core-0.13.1/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://bitcoin.org/bin/bitcoin-core-0.13.1/"),i("OutboundLink")],1)]),e._v(" "),i("p",[e._v("This is a new minor version release, including activation parameters for the\nsegwit softfork, various bugfixes and performance improvements, as well as\nupdated translations.")]),e._v(" "),i("p",[e._v("Please report bugs using the issue tracker at github:")]),e._v(" "),i("p",[i("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/issues",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/bitcoin/bitcoin/issues"),i("OutboundLink")],1)]),e._v(" "),i("p",[e._v("To receive security and update notifications, please subscribe to:")]),e._v(" "),i("p",[i("a",{attrs:{href:"https://bitcoincore.org/en/list/announcements/join/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://bitcoincore.org/en/list/announcements/join/"),i("OutboundLink")],1)]),e._v(" "),i("h1",{attrs:{id:"compatibility"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#compatibility"}},[e._v("#")]),e._v(" Compatibility")]),e._v(" "),i("p",[e._v("Microsoft ended support for Windows XP on "),i("a",{attrs:{href:"https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support",target:"_blank",rel:"noopener noreferrer"}},[e._v("April 8th, 2014"),i("OutboundLink")],1),e._v(",\nan OS initially released in 2001. This means that not even critical security\nupdates will be released anymore. Without security updates, using a bitcoin\nwallet on a XP machine is irresponsible at least.")]),e._v(" "),i("p",[e._v("In addition to that, with 0.12.x there have been varied reports of Bitcoin Core\nrandomly crashing on Windows XP. It is "),i("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/issues/7681#issuecomment-217439891",target:"_blank",rel:"noopener noreferrer"}},[e._v("not clear"),i("OutboundLink")],1),e._v("\nwhat the source of these crashes is, but it is likely that upstream\nlibraries such as Qt are no longer being tested on XP.")]),e._v(" "),i("p",[e._v("We do not have time nor resources to provide support for an OS that is\nend-of-life. From 0.13.0 on, Windows XP is no longer supported. Users are\nsuggested to upgrade to a newer version of Windows, or install an alternative OS\nthat is supported.")]),e._v(" "),i("p",[e._v("No attempt is made to prevent installing or running the software on Windows XP,\nyou can still do so at your own risk, but do not expect it to work: do not\nreport issues about Windows XP to the issue tracker.")]),e._v(" "),i("p",[e._v("From 0.13.1 onwards OS X 10.7 is no longer supported. 0.13.0 was intended to work on 10.7+,\nbut severe issues with the libc++ version on 10.7.x keep it from running reliably.\n0.13.1 now requires 10.8+, and will communicate that to 10.7 users, rather than crashing unexpectedly.")]),e._v(" "),i("h1",{attrs:{id:"notable-changes"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#notable-changes"}},[e._v("#")]),e._v(" Notable changes")]),e._v(" "),i("h2",{attrs:{id:"segregated-witness-soft-fork"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#segregated-witness-soft-fork"}},[e._v("#")]),e._v(" Segregated witness soft fork")]),e._v(" "),i("p",[e._v("Segregated witness (segwit) is a soft fork that, if activated, will\nallow transaction-producing software to separate (segregate) transaction\nsignatures (witnesses) from the part of the data in a transaction that is\ncovered by the txid. This provides several immediate benefits:")]),e._v(" "),i("ul",[i("li",[i("p",[i("strong",[e._v("Elimination of unwanted transaction malleability:")]),e._v(" Segregating the witness\nallows both existing and upgraded software to calculate the transaction\nidentifier (txid) of transactions without referencing the witness, which can\nsometimes be changed by third-parties (such as miners) or by co-signers in a\nmultisig spend. This solves all known cases of unwanted transaction\nmalleability, which is a problem that makes programming Bitcoin wallet\nsoftware more difficult and which seriously complicates the design of smart\ncontracts for Bitcoin.")])]),e._v(" "),i("li",[i("p",[i("strong",[e._v("Capacity increase:")]),e._v(" Segwit transactions contain new fields that are not\npart of the data currently used to calculate the size of a block, which\nallows a block containing segwit transactions to hold more data than allowed\nby the current maximum block size. Estimates based on the transactions\ncurrently found in blocks indicate that if all wallets switch to using\nsegwit, the network will be able to support about 70% more transactions. The\nnetwork will also be able to support more of the advanced-style payments\n(such as multisig) than it can support now because of the different weighting\ngiven to different parts of a transaction after segwit activates (see the\nfollowing section for details).")])]),e._v(" "),i("li",[i("p",[i("strong",[e._v("Weighting data based on how it affects node performance:")]),e._v(' Some parts of\neach Bitcoin block need to be stored by nodes in order to validate future\nblocks; other parts of a block can be immediately forgotten (pruned) or used\nonly for helping other nodes sync their copy of the block chain.  One large\npart of the immediately prunable data are transaction signatures (witnesses),\nand segwit makes it possible to give a different "weight" to segregated\nwitnesses to correspond with the lower demands they place on node resources.\nSpecifically, each byte of a segregated witness is given a weight of 1, each\nother byte in a block is given a weight of 4, and the maximum allowed weight\nof a block is 4 million.  Weighting the data this way better aligns the most\nprofitable strategy for creating blocks with the long-term costs of block\nvalidation.')])]),e._v(" "),i("li",[i("p",[i("strong",[e._v("Signature covers value:")]),e._v(" A simple improvement in the way signatures are\ngenerated in segwit simplifies the design of secure signature generators\n(such as hardware wallets), reduces the amount of data the signature\ngenerator needs to download, and allows the signature generator to operate\nmore quickly.  This is made possible by having the generator sign the amount\nof bitcoins they think they are spending, and by having full nodes refuse to\naccept those signatures unless the amount of bitcoins being spent is exactly\nthe same as was signed.  For non-segwit transactions, wallets instead had to\ndownload the complete previous transactions being spent for every payment\nthey made, which could be a slow operation on hardware wallets and in other\nsituations where bandwidth or computation speed was constrained.")])]),e._v(" "),i("li",[i("p",[i("strong",[e._v("Linear scaling of sighash operations:")]),e._v(" In 2015 a block was produced that\nrequired about 25 seconds to validate on modern hardware because of the way\ntransaction signature hashes are performed.  Other similar blocks, or blocks\nthat could take even longer to validate, can still be produced today.  The\nproblem that caused this can't be fixed in a soft fork without unwanted\nside-effects, but transactions that opt-in to using segwit will now use a\ndifferent signature method that doesn't suffer from this problem and doesn't\nhave any unwanted side-effects.")])]),e._v(" "),i("li",[i("p",[i("strong",[e._v("Increased security for multisig:")]),e._v(" Bitcoin addresses (both P2PKH addresses\nthat start with a '1' and P2SH addresses that start with a '3') use a hash\nfunction known as RIPEMD-160.  For P2PKH addresses, this provides about 160\nbits of security---which is beyond what cryptographers believe can be broken\ntoday.  But because P2SH is more flexible, only about 80 bits of security is\nprovided per address. Although 80 bits is very strong security, it is within\nthe realm of possibility that it can be broken by a powerful adversary.\nSegwit allows advanced transactions to use the SHA256 hash function instead,\nwhich provides about 128 bits of security  (that is 281 trillion times as\nmuch security as 80 bits and is equivalent to the maximum bits of security\nbelieved to be provided by Bitcoin's choice of parameters for its Elliptic\nCurve Digital Security Algorithm [ECDSA].)")])]),e._v(" "),i("li",[i("p",[i("strong",[e._v("More efficient almost-full-node security")]),e._v(" Satoshi Nakamoto's original\nBitcoin paper describes a method for allowing newly-started full nodes to\nskip downloading and validating some data from historic blocks that are\nprotected by large amounts of proof of work.  Unfortunately, Nakamoto's\nmethod can't guarantee that a newly-started node using this method will\nproduce an accurate copy of Bitcoin's current ledger (called the UTXO set),\nmaking the node vulnerable to falling out of consensus with other nodes.\nAlthough the problems with Nakamoto's method can't be fixed in a soft fork,\nSegwit accomplishes something similar to his original proposal: it makes it\npossible for a node to optionally skip downloading some blockchain data\n(specifically, the segregated witnesses) while still ensuring that the node\ncan build an accurate copy of the UTXO set for the block chain with the most\nproof of work.  Segwit enables this capability at the consensus layer, but\nnote that Bitcoin Core does not provide an option to use this capability as\nof this 0.13.1 release.")])]),e._v(" "),i("li",[i("p",[i("strong",[e._v("Script versioning:")]),e._v(" Segwit makes it easy for future soft forks to allow\nBitcoin users to individually opt-in to almost any change in the Bitcoin\nScript language when those users receive new transactions.  Features\ncurrently being researched by Bitcoin Core contributors that may use this\ncapability include support for Schnorr signatures, which can improve the\nprivacy and efficiency of multisig transactions (or transactions with\nmultiple inputs), and Merklized Abstract Syntax Trees (MAST), which can\nimprove the privacy and efficiency of scripts with two or more conditions.\nOther Bitcoin community members are studying several other improvements\nthat can be made using script versioning.")])])]),e._v(" "),i("p",[e._v("Activation for the segwit soft fork is being managed using BIP9\nversionbits.  Segwit's version bit is bit 1, and nodes will begin\ntracking which blocks signal support for segwit at the beginning of the\nfirst retarget period after segwit's start date of 15 November 2016.  If\n95% of blocks within a 2,016-block retarget period (about two weeks)\nsignal support for segwit, the soft fork will be locked in.  After\nanother 2,016 blocks, segwit will activate.")]),e._v(" "),i("p",[e._v("For more information about segwit, please see the "),i("a",{attrs:{href:"https://bitcoincore.org/en/2016/01/26/segwit-benefits/",target:"_blank",rel:"noopener noreferrer"}},[e._v("segwit FAQ"),i("OutboundLink")],1),e._v(", the\n"),i("a",{attrs:{href:"https://bitcoincore.org/en/segwit_wallet_dev/",target:"_blank",rel:"noopener noreferrer"}},[e._v("segwit wallet developers guide"),i("OutboundLink")],1),e._v(" or BIPs "),i("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("141"),i("OutboundLink")],1),e._v(", "),i("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("143"),i("OutboundLink")],1),e._v(",\n"),i("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("144"),i("OutboundLink")],1),e._v(", and "),i("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("145"),i("OutboundLink")],1),e._v(".  If you're a miner or mining pool\noperator, please see the "),i("a",{attrs:{href:"https://bitcoincore.org/en/2016/06/08/version-bits-miners-faq/",target:"_blank",rel:"noopener noreferrer"}},[e._v("versionbits FAQ"),i("OutboundLink")],1),e._v(" for information about\nsignaling support for a soft fork.")]),e._v(" "),i("h2",{attrs:{id:"null-dummy-soft-fork"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#null-dummy-soft-fork"}},[e._v("#")]),e._v(" Null dummy soft fork")]),e._v(" "),i("p",[e._v("Combined with the segwit soft fork is an additional change that turns a\nlong-existing network relay policy into a consensus rule. The\n"),i("code",[e._v("OP_CHECKMULTISIG")]),e._v(" and "),i("code",[e._v("OP_CHECKMULTISIGVERIFY")]),e._v(' opcodes consume an extra\nstack element ("dummy element") after signature validation. The dummy\nelement is not inspected in any manner, and could be replaced by any\nvalue without invalidating the script.')]),e._v(" "),i("p",[e._v("Because any value can be used for this dummy element, it's possible for\na third-party to insert data into other people's transactions, changing\nthe transaction's txid (called transaction malleability) and possibly\ncausing other problems.")]),e._v(" "),i("p",[e._v("Since Bitcoin Core 0.10.0, nodes have defaulted to only relaying and\nmining transactions whose dummy element was a null value (0x00, also\ncalled OP_0).  The null dummy soft fork turns this relay rule into a\nconsensus rule both for non-segwit transactions and segwit transactions,\nso that this method of mutating transactions is permanently eliminated\nfrom the network.")]),e._v(" "),i("p",[e._v("Signaling for the null dummy soft fork is done by signaling support\nfor segwit, and the null dummy soft fork will activate at the same time\nas segwit.")]),e._v(" "),i("p",[e._v("For more information, please see "),i("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP147"),i("OutboundLink")],1),e._v(".")]),e._v(" "),i("h2",{attrs:{id:"low-level-rpc-changes"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#low-level-rpc-changes"}},[e._v("#")]),e._v(" Low-level RPC changes")]),e._v(" "),i("ul",[i("li",[i("code",[e._v("importprunedfunds")]),e._v(" only accepts two required arguments. Some versions accept\nan optional third arg, which was always ignored. Make sure to never pass more\nthan two arguments.")])]),e._v(" "),i("h2",{attrs:{id:"linux-arm-builds"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#linux-arm-builds"}},[e._v("#")]),e._v(" Linux ARM builds")]),e._v(" "),i("p",[e._v("With the 0.13.0 release, pre-built Linux ARM binaries were added to the set of\nuploaded executables. Additional detail on the ARM architecture targeted by each\nis provided below.")]),e._v(" "),i("p",[e._v("The following extra files can be found in the download directory or torrent:")]),e._v(" "),i("ul",[i("li",[i("code",[e._v("bitcoin-${VERSION}-arm-linux-gnueabihf.tar.gz")]),e._v(": Linux binaries targeting\nthe 32-bit ARMv7-A architecture.")]),e._v(" "),i("li",[i("code",[e._v("bitcoin-${VERSION}-aarch64-linux-gnu.tar.gz")]),e._v(": Linux binaries targeting\nthe 64-bit ARMv8-A architecture.")])]),e._v(" "),i("p",[e._v("ARM builds are still experimental. If you have problems on a certain device or\nLinux distribution combination please report them on the bug tracker, it may be\npossible to resolve them. Note that the device you use must be (backward)\ncompatible with the architecture targeted by the binary that you use.\nFor example, a Raspberry Pi 2 Model B or Raspberry Pi 3 Model B (in its 32-bit\nexecution state) device, can run the 32-bit ARMv7-A targeted binary. However,\nno model of Raspberry Pi 1 device can run either binary because they are all\nARMv6 architecture devices that are not compatible with ARMv7-A or ARMv8-A.")]),e._v(" "),i("p",[e._v("Note that Android is not considered ARM Linux in this context. The executables\nare not expected to work out of the box on Android.")]),e._v(" "),i("h1",{attrs:{id:"_0-13-1-change-log"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_0-13-1-change-log"}},[e._v("#")]),e._v(" 0.13.1 Change log")]),e._v(" "),i("p",[e._v("Detailed release notes follow. This overview includes changes that affect\nbehavior, not code moves, refactors and string updates. For convenience in locating\nthe code changes and accompanying discussion, both the pull request and\ngit merge commit are mentioned.")]),e._v(" "),i("h3",{attrs:{id:"consensus"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#consensus"}},[e._v("#")]),e._v(" Consensus")]),e._v(" "),i("ul",[i("li",[e._v("#8636 "),i("code",[e._v("9dfa0c8")]),e._v(" Implement NULLDUMMY softfork (BIP147) (jl2012)")]),e._v(" "),i("li",[e._v("#8848 "),i("code",[e._v("7a34a46")]),e._v(" Add NULLDUMMY verify flag in bitcoinconsensus.h (jl2012)")]),e._v(" "),i("li",[e._v("#8937 "),i("code",[e._v("8b66659")]),e._v(" Define start and end time for segwit deployment (sipa)")])]),e._v(" "),i("h3",{attrs:{id:"rpc-and-other-apis"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#rpc-and-other-apis"}},[e._v("#")]),e._v(" RPC and other APIs")]),e._v(" "),i("ul",[i("li",[e._v("#8581 "),i("code",[e._v("526d2b0")]),e._v(" Drop misleading option in importprunedfunds (MarcoFalke)")]),e._v(" "),i("li",[e._v("#8699 "),i("code",[e._v("a5ec248")]),e._v(" Remove createwitnessaddress RPC command (jl2012)")]),e._v(" "),i("li",[e._v("#8780 "),i("code",[e._v("794b007")]),e._v(" Deprecate getinfo (MarcoFalke)")]),e._v(" "),i("li",[e._v("#8832 "),i("code",[e._v("83ad563")]),e._v(" Throw JSONRPCError when utxo set can not be read (MarcoFalke)")]),e._v(" "),i("li",[e._v("#8884 "),i("code",[e._v("b987348")]),e._v(" getblockchaininfo help: pruneheight is the lowest, not highest, block (luke-jr)")]),e._v(" "),i("li",[e._v("#8858 "),i("code",[e._v("3f508ed")]),e._v(" rpc: Generate auth cookie in hex instead of base64 (laanwj)")]),e._v(" "),i("li",[e._v("#8951 "),i("code",[e._v("7c2bf4b")]),e._v(" RPC/Mining: getblocktemplate: Update and fix formatting of help (luke-jr)")])]),e._v(" "),i("h3",{attrs:{id:"block-and-transaction-handling"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#block-and-transaction-handling"}},[e._v("#")]),e._v(" Block and transaction handling")]),e._v(" "),i("ul",[i("li",[e._v("#8611 "),i("code",[e._v("a9429ca")]),e._v(" Reduce default number of blocks to check at startup (sipa)")]),e._v(" "),i("li",[e._v("#8634 "),i("code",[e._v("3e80ab7")]),e._v(" Add policy: null signature for failed CHECK(MULTI)SIG (jl2012)")]),e._v(" "),i("li",[e._v("#8525 "),i("code",[e._v("1672225")]),e._v(" Do not store witness txn in rejection cache (sipa)")]),e._v(" "),i("li",[e._v("#8499 "),i("code",[e._v("9777fe1")]),e._v(" Add several policy limits and disable uncompressed keys for segwit scripts (jl2012)")]),e._v(" "),i("li",[e._v("#8526 "),i("code",[e._v("0027672")]),e._v(" Make non-minimal OP_IF/NOTIF argument non-standard for P2WSH (jl2012)")]),e._v(" "),i("li",[e._v("#8524 "),i("code",[e._v("b8c79a0")]),e._v(" Precompute sighashes (sipa)")]),e._v(" "),i("li",[e._v("#8651 "),i("code",[e._v("b8c79a0")]),e._v(" Predeclare PrecomputedTransactionData as struct (sipa)")])]),e._v(" "),i("h3",{attrs:{id:"p2p-protocol-and-network-code"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#p2p-protocol-and-network-code"}},[e._v("#")]),e._v(" P2P protocol and network code")]),e._v(" "),i("ul",[i("li",[e._v("#8740 "),i("code",[e._v("42ea51a")]),e._v(" No longer send local address in addrMe (laanwj)")]),e._v(" "),i("li",[e._v("#8427 "),i("code",[e._v("69d1cd2")]),e._v(" Ignore "),i("code",[e._v("notfound")]),e._v(" P2P messages (laanwj)")]),e._v(" "),i("li",[e._v("#8573 "),i("code",[e._v("4f84082")]),e._v(" Set jonasschnellis dns-seeder filter flag (jonasschnelli)")]),e._v(" "),i("li",[e._v("#8712 "),i("code",[e._v("23feab1")]),e._v(" Remove maxuploadtargets recommended minimum (jonasschnelli)")]),e._v(" "),i("li",[e._v("#8862 "),i("code",[e._v("7ae6242")]),e._v(" Fix a few cases where messages were sent after requested disconnect (theuni)")]),e._v(" "),i("li",[e._v("#8393 "),i("code",[e._v("fe1975a")]),e._v(" Support for compact blocks together with segwit (sipa)")]),e._v(" "),i("li",[e._v("#8282 "),i("code",[e._v("2611ad7")]),e._v(" Feeler connections to increase online addrs in the tried table (EthanHeilman)")]),e._v(" "),i("li",[e._v("#8612 "),i("code",[e._v("2215c22")]),e._v(" Check for compatibility with download in FindNextBlocksToDownload (sipa)")]),e._v(" "),i("li",[e._v("#8606 "),i("code",[e._v("bbf379b")]),e._v(" Fix some locks (sipa)")]),e._v(" "),i("li",[e._v("#8594 "),i("code",[e._v("ab295bb")]),e._v(" Do not add random inbound peers to addrman (gmaxwell)")]),e._v(" "),i("li",[e._v("#8940 "),i("code",[e._v("5b4192b")]),e._v(" Add x9 service bit support to dnsseed.bluematt.me, seed.bitcoinstats.com (TheBlueMatt, cdecker)")]),e._v(" "),i("li",[e._v("#8944 "),i("code",[e._v("685e4c7")]),e._v(" Remove bogus assert on number of oubound connections. (TheBlueMatt)")]),e._v(" "),i("li",[e._v("#8949 "),i("code",[e._v("0dbc48a")]),e._v(" Be more agressive in getting connections to peers with relevant services (gmaxwell)")])]),e._v(" "),i("h3",{attrs:{id:"build-system"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#build-system"}},[e._v("#")]),e._v(" Build system")]),e._v(" "),i("ul",[i("li",[e._v("#8293 "),i("code",[e._v("fa5b249")]),e._v(" Allow building libbitcoinconsensus without any univalue (luke-jr)")]),e._v(" "),i("li",[e._v("#8492 "),i("code",[e._v("8b0bdd3")]),e._v(" Allow building bench_bitcoin by itself (luke-jr)")]),e._v(" "),i("li",[e._v("#8563 "),i("code",[e._v("147003c")]),e._v(" Add configure check for -latomic (ajtowns)")]),e._v(" "),i("li",[e._v("#8626 "),i("code",[e._v("ea51b0f")]),e._v(" Berkeley DB v6 compatibility fix (netsafe)")]),e._v(" "),i("li",[e._v("#8520 "),i("code",[e._v("75f2065")]),e._v(" Remove check for "),i("code",[e._v("openssl/ec.h")]),e._v(" (laanwj)")])]),e._v(" "),i("h3",{attrs:{id:"gui"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#gui"}},[e._v("#")]),e._v(" GUI")]),e._v(" "),i("ul",[i("li",[e._v("#8481 "),i("code",[e._v("d9f0d4e")]),e._v(" Fix minimize and close bugs (adlawren)")]),e._v(" "),i("li",[e._v("#8487 "),i("code",[e._v("a37cec5")]),e._v(" Persist the datadir after option reset (achow101)")]),e._v(" "),i("li",[e._v("#8697 "),i("code",[e._v("41fd852")]),e._v(" Fix op order to append first alert (rodasmith)")]),e._v(" "),i("li",[e._v("#8678 "),i("code",[e._v("8e03382")]),e._v(" Fix UI bug that could result in paying unexpected fee (jonasschnelli)")]),e._v(" "),i("li",[e._v("#8911 "),i("code",[e._v("7634d8e")]),e._v(" Translate all files, even if wallet disabled (laanwj)")]),e._v(" "),i("li",[e._v("#8540 "),i("code",[e._v("1db3352")]),e._v(' Fix random segfault when closing "Choose data directory" dialog (laanwj)')]),e._v(" "),i("li",[e._v("#7579 "),i("code",[e._v("f1c0d78")]),e._v(" Show network/chain errors in the GUI (jonasschnelli)")])]),e._v(" "),i("h3",{attrs:{id:"wallet"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#wallet"}},[e._v("#")]),e._v(" Wallet")]),e._v(" "),i("ul",[i("li",[e._v("#8443 "),i("code",[e._v("464dedd")]),e._v(" Trivial cleanup of HD wallet changes (jonasschnelli)")]),e._v(" "),i("li",[e._v("#8539 "),i("code",[e._v("cb07f19")]),e._v(" CDB: fix debug output (crowning-)")]),e._v(" "),i("li",[e._v("#8664 "),i("code",[e._v("091cdeb")]),e._v(" Fix segwit-related wallet bug (sdaftuar)")]),e._v(" "),i("li",[e._v("#8693 "),i("code",[e._v("c6a6291")]),e._v(" Add witness address to address book (instagibbs)")]),e._v(" "),i("li",[e._v("#8765 "),i("code",[e._v("6288659")]),e._v(' Remove "unused" ThreadFlushWalletDB from removeprunedfunds (jonasschnelli)')])]),e._v(" "),i("h3",{attrs:{id:"tests-and-qa"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#tests-and-qa"}},[e._v("#")]),e._v(" Tests and QA")]),e._v(" "),i("ul",[i("li",[e._v("#8713 "),i("code",[e._v("ae8c7df")]),e._v(" create_cache: Delete temp dir when done (MarcoFalke)")]),e._v(" "),i("li",[e._v("#8716 "),i("code",[e._v("e34374e")]),e._v(" Check legacy wallet as well (MarcoFalke)")]),e._v(" "),i("li",[e._v("#8750 "),i("code",[e._v("d6ebe13")]),e._v(" Refactor RPCTestHandler to prevent TimeoutExpired (MarcoFalke)")]),e._v(" "),i("li",[e._v("#8652 "),i("code",[e._v("63462c2")]),e._v(" remove root test directory for RPC tests (yurizhykin)")]),e._v(" "),i("li",[e._v("#8724 "),i("code",[e._v("da94272")]),e._v(" walletbackup: Sync blocks inside the loop (MarcoFalke)")]),e._v(" "),i("li",[e._v("#8400 "),i("code",[e._v("bea02dc")]),e._v(" enable rpcbind_test (yurizhykin)")]),e._v(" "),i("li",[e._v("#8417 "),i("code",[e._v("f70be14")]),e._v(" Add walletdump RPC test (including HD- & encryption-tests) (jonasschnelli)")]),e._v(" "),i("li",[e._v("#8419 "),i("code",[e._v("a7aa3cc")]),e._v(" Enable size accounting in mining unit tests (sdaftuar)")]),e._v(" "),i("li",[e._v("#8442 "),i("code",[e._v("8bb1efd")]),e._v(" Rework hd wallet dump test (MarcoFalke)")]),e._v(" "),i("li",[e._v("#8528 "),i("code",[e._v("3606b6b")]),e._v(" Update p2p-segwit.py to reflect correct behavior (instagibbs)")]),e._v(" "),i("li",[e._v("#8531 "),i("code",[e._v("a27cdd8")]),e._v(" abandonconflict: Use assert_equal (MarcoFalke)")]),e._v(" "),i("li",[e._v("#8667 "),i("code",[e._v("6b07362")]),e._v(" Fix SIGHASH_SINGLE bug in test_framework SignatureHash (jl2012)")]),e._v(" "),i("li",[e._v("#8673 "),i("code",[e._v("03b0196")]),e._v(" Fix obvious assignment/equality error in test (JeremyRubin)")]),e._v(" "),i("li",[e._v("#8739 "),i("code",[e._v("cef633c")]),e._v(" Fix broken sendcmpct test in p2p-compactblocks.py (sdaftuar)")]),e._v(" "),i("li",[e._v("#8418 "),i("code",[e._v("ff893aa")]),e._v(" Add tests for compact blocks (sdaftuar)")]),e._v(" "),i("li",[e._v("#8803 "),i("code",[e._v("375437c")]),e._v(" Ping regularly in p2p-segwit.py to keep connection alive (jl2012)")]),e._v(" "),i("li",[e._v("#8827 "),i("code",[e._v("9bbe66e")]),e._v(" Split up slow RPC calls to avoid pruning test timeouts (sdaftuar)")]),e._v(" "),i("li",[e._v("#8829 "),i("code",[e._v("2a8bca4")]),e._v(" Add bitcoin-tx JSON tests (jnewbery)")]),e._v(" "),i("li",[e._v("#8834 "),i("code",[e._v("1dd1783")]),e._v(" blockstore: Switch to dumb dbm (MarcoFalke)")]),e._v(" "),i("li",[e._v("#8835 "),i("code",[e._v("d87227d")]),e._v(" nulldummy.py: Don't run unused code (MarcoFalke)")]),e._v(" "),i("li",[e._v("#8836 "),i("code",[e._v("eb18cc1")]),e._v(" bitcoin-util-test.py should fail if the output file is empty (jnewbery)")]),e._v(" "),i("li",[e._v("#8839 "),i("code",[e._v("31ab2f8")]),e._v(" Avoid ConnectionResetErrors during RPC tests (laanwj)")]),e._v(" "),i("li",[e._v("#8840 "),i("code",[e._v("cbc3fe5")]),e._v(" Explicitly set encoding to utf8 when opening text files (laanwj)")]),e._v(" "),i("li",[e._v("#8841 "),i("code",[e._v("3e4abb5")]),e._v(" Fix nulldummy test (jl2012)")]),e._v(" "),i("li",[e._v("#8854 "),i("code",[e._v("624a007")]),e._v(" Fix race condition in p2p-compactblocks test (sdaftuar)")]),e._v(" "),i("li",[e._v("#8857 "),i("code",[e._v("1f60d45")]),e._v(" mininode: Only allow named args in wait_until (MarcoFalke)")]),e._v(" "),i("li",[e._v("#8860 "),i("code",[e._v("0bee740")]),e._v(" util: Move wait_bitcoinds() into stop_nodes() (MarcoFalke)")]),e._v(" "),i("li",[e._v("#8882 "),i("code",[e._v("b73f065")]),e._v(" Fix race conditions in p2p-compactblocks.py and sendheaders.py (sdaftuar)")]),e._v(" "),i("li",[e._v("#8904 "),i("code",[e._v("cc6f551")]),e._v(" Fix compact block shortids for a test case (dagurval)")])]),e._v(" "),i("h3",{attrs:{id:"documentation"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#documentation"}},[e._v("#")]),e._v(" Documentation")]),e._v(" "),i("ul",[i("li",[e._v("#8754 "),i("code",[e._v("0e2c6bd")]),e._v(" Target protobuf 2.6 in OS X build notes. (fanquake)")]),e._v(" "),i("li",[e._v("#8461 "),i("code",[e._v("b17a3f9")]),e._v(" Document return value of networkhashps for getmininginfo RPC endpoint (jlopp)")]),e._v(" "),i("li",[e._v("#8512 "),i("code",[e._v("156e305")]),e._v(" Corrected JSON typo on setban of net.cpp (sevastos)")]),e._v(" "),i("li",[e._v("#8683 "),i("code",[e._v("8a7d7ff")]),e._v(" Fix incorrect file name bitcoin.qrc  (bitcoinsSG)")]),e._v(" "),i("li",[e._v("#8891 "),i("code",[e._v("5e0dd9e")]),e._v(" Update bips.md for Segregated Witness (fanquake)")]),e._v(" "),i("li",[e._v("#8545 "),i("code",[e._v("863ae74")]),e._v(" Update git-subtree-check.sh README (MarcoFalke)")]),e._v(" "),i("li",[e._v("#8607 "),i("code",[e._v("486650a")]),e._v(" Fix doxygen off-by-one comments, fix typos (MarcoFalke)")]),e._v(" "),i("li",[e._v("#8560 "),i("code",[e._v("c493f43")]),e._v(" Fix two VarInt examples in serialize.h (cbarcenas)")]),e._v(" "),i("li",[e._v("#8737 "),i("code",[e._v("084cae9")]),e._v(" UndoReadFromDisk works on undo files (rev), not on block files (paveljanik)")]),e._v(" "),i("li",[e._v("#8625 "),i("code",[e._v("0a35573")]),e._v(" Clarify statement about parallel jobs in rpc-tests.py (isle2983)")]),e._v(" "),i("li",[e._v("#8624 "),i("code",[e._v("0e6d753")]),e._v(" build: Mention curl (MarcoFalke)")]),e._v(" "),i("li",[e._v("#8604 "),i("code",[e._v("b09e13c")]),e._v(" build,doc: Update for 0.13.0+ and OpenBSD 5.9 (laanwj)")]),e._v(" "),i("li",[e._v("#8939 "),i("code",[e._v("06d15fb")]),e._v(" Update implemented bips for 0.13.1 (sipa)")])]),e._v(" "),i("h3",{attrs:{id:"miscellaneous"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#miscellaneous"}},[e._v("#")]),e._v(" Miscellaneous")]),e._v(" "),i("ul",[i("li",[e._v("#8742 "),i("code",[e._v("d31ac72")]),e._v(" Specify Protobuf version 2 in paymentrequest.proto (fanquake)")]),e._v(" "),i("li",[e._v("#8414,#8558,#8676,#8700,#8701,#8702 Add missing copyright headers (isle2983, kazcw)")]),e._v(" "),i("li",[e._v("#8899 "),i("code",[e._v("4ed2627")]),e._v(" Fix wake from sleep issue with Boost 1.59.0 (fanquake)")]),e._v(" "),i("li",[e._v("#8817 "),i("code",[e._v("bcf3806")]),e._v(" update bitcoin-tx to output witness data (jnewbery)")]),e._v(" "),i("li",[e._v("#8513 "),i("code",[e._v("4e5fc31")]),e._v(" Fix a type error that would not compile on OSX. (JeremyRubin)")]),e._v(" "),i("li",[e._v("#8392 "),i("code",[e._v("30eac2d")]),e._v(" Fix several node initialization issues (sipa)")]),e._v(" "),i("li",[e._v("#8548 "),i("code",[e._v("305d8ac")]),e._v(" Use "),i("code",[e._v("__func__")]),e._v(" to get function name for output printing (MarcoFalke)")]),e._v(" "),i("li",[e._v("#8291 "),i("code",[e._v("a987431")]),e._v(" [util] CopyrightHolders: Check for untranslated substitution (MarcoFalke)")])]),e._v(" "),i("h1",{attrs:{id:"credits"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#credits"}},[e._v("#")]),e._v(" Credits")]),e._v(" "),i("p",[e._v("Thanks to everyone who directly contributed to this release:")]),e._v(" "),i("ul",[i("li",[e._v("adlawren")]),e._v(" "),i("li",[e._v("Alexey Vesnin")]),e._v(" "),i("li",[e._v("Anders Øyvind Urke-Sætre")]),e._v(" "),i("li",[e._v("Andrew Chow")]),e._v(" "),i("li",[e._v("Anthony Towns")]),e._v(" "),i("li",[e._v("BtcDrak")]),e._v(" "),i("li",[e._v("Chris Stewart")]),e._v(" "),i("li",[e._v("Christian Barcenas")]),e._v(" "),i("li",[e._v("Christian Decker")]),e._v(" "),i("li",[e._v("Cory Fields")]),e._v(" "),i("li",[e._v("crowning-")]),e._v(" "),i("li",[e._v("Dagur Valberg Johannsson")]),e._v(" "),i("li",[e._v("David A. Harding")]),e._v(" "),i("li",[e._v("Eric Lombrozo")]),e._v(" "),i("li",[e._v("Ethan Heilman")]),e._v(" "),i("li",[e._v("fanquake")]),e._v(" "),i("li",[e._v("Gaurav Rana")]),e._v(" "),i("li",[e._v("Gregory Maxwell")]),e._v(" "),i("li",[e._v("instagibbs")]),e._v(" "),i("li",[e._v("isle2983")]),e._v(" "),i("li",[e._v("Jameson Lopp")]),e._v(" "),i("li",[e._v("Jeremy Rubin")]),e._v(" "),i("li",[e._v("jnewbery")]),e._v(" "),i("li",[e._v("Johnson Lau")]),e._v(" "),i("li",[e._v("Jonas Schnelli")]),e._v(" "),i("li",[e._v("jonnynewbs")]),e._v(" "),i("li",[e._v("Justin Camarena")]),e._v(" "),i("li",[e._v("Kaz Wesley")]),e._v(" "),i("li",[e._v("leijurv")]),e._v(" "),i("li",[e._v("Luke Dashjr")]),e._v(" "),i("li",[e._v("MarcoFalke")]),e._v(" "),i("li",[e._v("Marty Jones")]),e._v(" "),i("li",[e._v("Matt Corallo")]),e._v(" "),i("li",[e._v("Micha")]),e._v(" "),i("li",[e._v("Michael Ford")]),e._v(" "),i("li",[e._v("mruddy")]),e._v(" "),i("li",[e._v("Pavel Janík")]),e._v(" "),i("li",[e._v("Pieter Wuille")]),e._v(" "),i("li",[e._v("rodasmith")]),e._v(" "),i("li",[e._v("Sev")]),e._v(" "),i("li",[e._v("Suhas Daftuar")]),e._v(" "),i("li",[e._v("whythat")]),e._v(" "),i("li",[e._v("Wladimir J. van der Laan")])]),e._v(" "),i("p",[e._v("As well as everyone that helped translating on "),i("a",{attrs:{href:"https://www.transifex.com/projects/p/bitcoin/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Transifex"),i("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);t.default=o.exports}}]);