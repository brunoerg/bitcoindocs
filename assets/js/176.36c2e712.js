(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{551:function(e,t,i){"use strict";i.r(t);var a=i(43),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"_0-9-0"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_0-9-0"}},[e._v("#")]),e._v(" 0.9.0")]),e._v(" "),i("p",[e._v("Bitcoin Core version 0.9.0 is now available from:")]),e._v(" "),i("p",[e._v("https://bitcoin.org/bin/0.9.0/")]),e._v(" "),i("p",[e._v("This is a new major version release, bringing both new features and\nbug fixes.")]),e._v(" "),i("p",[e._v("Please report bugs using the issue tracker at github:")]),e._v(" "),i("p",[e._v("https://github.com/bitcoin/bitcoin/issues")]),e._v(" "),i("h2",{attrs:{id:"how-to-upgrade"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#how-to-upgrade"}},[e._v("#")]),e._v(" How to Upgrade")]),e._v(" "),i("p",[e._v("If you are running an older version, shut it down. Wait until it has completely\nshut down (which might take a few minutes for older versions), uninstall all\nearlier versions of Bitcoin, then run the installer (on Windows) or just copy\nover /Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).")]),e._v(" "),i("p",[e._v("If you are upgrading from version 0.7.2 or earlier, the first time you run\n0.9.0 your blockchain files will be re-indexed, which will take anywhere from\n30 minutes to several hours, depending on the speed of your machine.")]),e._v(" "),i("p",[e._v("On Windows, do not forget to uninstall all earlier versions of the Bitcoin\nclient first, especially if you are switching to the 64-bit version.")]),e._v(" "),i("h2",{attrs:{id:"windows-64-bit-installer"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#windows-64-bit-installer"}},[e._v("#")]),e._v(" Windows 64-bit installer")]),e._v(" "),i("p",[e._v("New in 0.9.0 is the Windows 64-bit version of the client. There have been\nfrequent reports of users running out of virtual memory on 32-bit systems\nduring the initial sync. Because of this it is recommended to install the\n64-bit version if your system supports it.")]),e._v(" "),i("p",[e._v("NOTE: Release candidate 2 Windows binaries are not code-signed; use PGP\nand the SHA256SUMS.asc file to make sure your binaries are correct.\nIn the final 0.9.0 release, Windows setup.exe binaries will be code-signed.")]),e._v(" "),i("h2",{attrs:{id:"osx-10-5-32-bit-no-longer-supported"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#osx-10-5-32-bit-no-longer-supported"}},[e._v("#")]),e._v(" OSX 10.5 / 32-bit no longer supported")]),e._v(" "),i("p",[e._v("0.9.0 drops support for older Macs. The minimum requirements are now:")]),e._v(" "),i("ul",[i("li",[e._v("A 64-bit-capable CPU (see http://support.apple.com/kb/ht3696);")]),e._v(" "),i("li",[e._v("Mac OS 10.6 or later (see https://support.apple.com/kb/ht1633).")])]),e._v(" "),i("h2",{attrs:{id:"downgrading-warnings"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#downgrading-warnings"}},[e._v("#")]),e._v(" Downgrading warnings")]),e._v(" "),i("p",[e._v("The 'chainstate' for this release is not always compatible with previous\nreleases, so if you run 0.9 and then decide to switch back to a\n0.8.x release you might get a blockchain validation error when starting the\nold release (due to 'pruned outputs' being omitted from the index of\nunspent transaction outputs).")]),e._v(" "),i("p",[e._v("Running the old release with the -reindex option will rebuild the chainstate\ndata structures and correct the problem.")]),e._v(" "),i("p",[e._v("Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan\nthe blockchain for missing spent coins, which will take a long time (tens\nof minutes on a typical machine).")]),e._v(" "),i("h2",{attrs:{id:"rebranding-to-bitcoin-core"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#rebranding-to-bitcoin-core"}},[e._v("#")]),e._v(" Rebranding to Bitcoin Core")]),e._v(" "),i("p",[e._v("To reduce confusion between Bitcoin-the-network and Bitcoin-the-software we\nhave renamed the reference client to Bitcoin Core.")]),e._v(" "),i("h2",{attrs:{id:"op-return-and-data-in-the-block-chain"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#op-return-and-data-in-the-block-chain"}},[e._v("#")]),e._v(" OP_RETURN and data in the block chain")]),e._v(" "),i("p",[e._v("On OP_RETURN:  There was been some confusion and misunderstanding in\nthe community, regarding the OP_RETURN feature in 0.9 and data in the\nblockchain.  This change is not an endorsement of storing data in the\nblockchain.  The OP_RETURN change creates a provably-prunable output,\nto avoid data storage schemes -- some of which were already deployed --\nthat were storing arbitrary data such as images as forever-unspendable\nTX outputs, bloating bitcoin's UTXO database.")]),e._v(" "),i("p",[e._v("Storing arbitrary data in the blockchain is still a bad idea; it is less\ncostly and far more efficient to store non-currency data elsewhere.")]),e._v(" "),i("h2",{attrs:{id:"autotools-build-system"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#autotools-build-system"}},[e._v("#")]),e._v(" Autotools build system")]),e._v(" "),i("p",[e._v("For 0.9.0 we switched to an autotools-based build system instead of individual\n(q)makefiles.")]),e._v(" "),i("p",[e._v('Using the standard "./autogen.sh; ./configure; make" to build Bitcoin-Qt and\nbitcoind makes it easier for experienced open source developers to contribute\nto the project.')]),e._v(" "),i("p",[e._v("Be sure to check doc/build-*.md for your platform before building from source.")]),e._v(" "),i("h2",{attrs:{id:"bitcoin-cli"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#bitcoin-cli"}},[e._v("#")]),e._v(" Bitcoin-cli")]),e._v(" "),i("p",[e._v("Another change in the 0.9 release is moving away from the bitcoind executable\nfunctioning both as a server and as a RPC client. The RPC client functionality\n(\"tell the running bitcoin daemon to do THIS\") was split into a separate\nexecutable, 'bitcoin-cli'. The RPC client code will eventually be removed from\nbitcoind, but will be kept for backwards compatibility for a release or two.")]),e._v(" "),i("h2",{attrs:{id:"walletpassphrase-rpc"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#walletpassphrase-rpc"}},[e._v("#")]),e._v(" "),i("code",[e._v("walletpassphrase")]),e._v(" RPC")]),e._v(" "),i("p",[e._v("The behavior of the "),i("code",[e._v("walletpassphrase")]),e._v(" RPC when the wallet is already unlocked\nhas changed between 0.8 and 0.9.")]),e._v(" "),i("p",[e._v("The 0.8 behavior of "),i("code",[e._v("walletpassphrase")]),e._v(" is to fail when the wallet is already unlocked:")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",[i("code",[e._v("> walletpassphrase 1000\nwalletunlocktime = now + 1000\n> walletpassphrase 10\nError: Wallet is already unlocked (old unlock time stays)\n")])])]),i("p",[e._v("The new behavior of "),i("code",[e._v("walletpassphrase")]),e._v(" is to set a new unlock time overriding\nthe old one:")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",[i("code",[e._v("> walletpassphrase 1000\nwalletunlocktime = now + 1000\n> walletpassphrase 10\nwalletunlocktime = now + 10 (overriding the old unlock time)\n")])])]),i("h2",{attrs:{id:"transaction-malleability-related-fixes"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#transaction-malleability-related-fixes"}},[e._v("#")]),e._v(" Transaction malleability-related fixes")]),e._v(" "),i("p",[e._v("This release contains a few fixes for transaction ID (TXID) malleability\nissues:")]),e._v(" "),i("ul",[i("li",[e._v("-nospendzeroconfchange command-line option, to avoid spending\nzero-confirmation change")]),e._v(" "),i("li",[e._v("IsStandard() transaction rules tightened to prevent relaying and mining of\nmutated transactions")]),e._v(" "),i("li",[e._v("Additional information in listtransactions/gettransaction output to\nreport wallet transactions that conflict with each other because\nthey spend the same outputs.")]),e._v(" "),i("li",[e._v("Bug fixes to the getbalance/listaccounts RPC commands, which would report\nincorrect balances for double-spent (or mutated) transactions.")]),e._v(" "),i("li",[e._v("New option: -zapwallettxes to rebuild the wallet's transaction information")])]),e._v(" "),i("h2",{attrs:{id:"transaction-fees"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#transaction-fees"}},[e._v("#")]),e._v(" Transaction Fees")]),e._v(" "),i("p",[e._v("This release drops the default fee required to relay transactions across the\nnetwork and for miners to consider the transaction in their blocks to\n0.01mBTC per kilobyte.")]),e._v(" "),i("p",[e._v("Note that getting a transaction relayed across the network does NOT guarantee\nthat the transaction will be accepted by a miner; by default, miners fill\ntheir blocks with 50 kilobytes of high-priority transactions, and then with\n700 kilobytes of the highest-fee-per-kilobyte transactions.")]),e._v(" "),i("p",[e._v("The minimum relay/mining fee-per-kilobyte may be changed with the\nminrelaytxfee option. Note that previous releases incorrectly used\nthe mintxfee setting to determine which low-priority transactions should\nbe considered for inclusion in blocks.")]),e._v(" "),i("p",[e._v("The wallet code still uses a default fee for low-priority transactions of\n0.1mBTC per kilobyte. During periods of heavy transaction volume, even this\nfee may not be enough to get transactions confirmed quickly; the mintxfee\noption may be used to override the default.")]),e._v(" "),i("h1",{attrs:{id:"_0-9-0-release-notes"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_0-9-0-release-notes"}},[e._v("#")]),e._v(" 0.9.0 Release notes")]),e._v(" "),i("p",[e._v("RPC:")]),e._v(" "),i("ul",[i("li",[e._v("New notion of 'conflicted' transactions, reported as confirmations: -1")]),e._v(" "),i("li",[e._v("'listreceivedbyaddress' now provides tx ids")]),e._v(" "),i("li",[e._v("Add raw transaction hex to 'gettransaction' output")]),e._v(" "),i("li",[e._v("Updated help and tests for 'getreceivedby(account|address)'")]),e._v(" "),i("li",[e._v("In 'getblock', accept 2nd 'verbose' parameter, similar to getrawtransaction,\nbut defaulting to 1 for backward compatibility")]),e._v(" "),i("li",[e._v("Add 'verifychain', to verify chain database at runtime")]),e._v(" "),i("li",[e._v("Add 'dumpwallet' and 'importwallet' RPCs")]),e._v(" "),i("li",[e._v("'keypoolrefill' gains optional size parameter")]),e._v(" "),i("li",[e._v("Add 'getbestblockhash', to return tip of best chain")]),e._v(" "),i("li",[e._v("Add 'chainwork' (the total work done by all blocks since the genesis block)\nto 'getblock' output")]),e._v(" "),i("li",[e._v("Make RPC password resistant to timing attacks")]),e._v(" "),i("li",[e._v("Clarify help messages and add examples")]),e._v(" "),i("li",[e._v("Add 'getrawchangeaddress' call for raw transaction change destinations")]),e._v(" "),i("li",[e._v("Reject insanely high fees by default in 'sendrawtransaction'")]),e._v(" "),i("li",[e._v("Add RPC call 'decodescript' to decode a hex-encoded transaction script")]),e._v(" "),i("li",[e._v("Make 'validateaddress' provide redeemScript")]),e._v(" "),i("li",[e._v("Add 'getnetworkhashps' to get the calculated network hashrate")]),e._v(" "),i("li",[e._v("New RPC 'ping' command to request ping, new 'pingtime' and 'pingwait' fields\nin 'getpeerinfo' output")]),e._v(" "),i("li",[e._v("Adding new 'addrlocal' field to 'getpeerinfo' output")]),e._v(" "),i("li",[e._v("Add verbose boolean to 'getrawmempool'")]),e._v(" "),i("li",[e._v("Add rpc command 'getunconfirmedbalance' to obtain total unconfirmed balance")]),e._v(" "),i("li",[e._v("Explicitly ensure that wallet is unlocked in "),i("code",[e._v("importprivkey")])]),e._v(" "),i("li",[e._v("Add check for valid keys in "),i("code",[e._v("importprivkey")])])]),e._v(" "),i("p",[e._v("Command-line options:")]),e._v(" "),i("ul",[i("li",[e._v("New option: -nospendzeroconfchange to never spend unconfirmed change outputs")]),e._v(" "),i("li",[e._v("New option: -zapwallettxes to rebuild the wallet's transaction information")]),e._v(" "),i("li",[e._v("Rename option '-tor' to '-onion' to better reflect what it does")]),e._v(" "),i("li",[e._v("Add '-disablewallet' mode to let bitcoind run entirely without wallet (when\nbuilt with wallet)")]),e._v(" "),i("li",[e._v("Update default '-rpcsslciphers' to include TLSv1.2")]),e._v(" "),i("li",[e._v("make '-logtimestamps' default on and rework help-message")]),e._v(" "),i("li",[e._v("RPC client option: '-rpcwait', to wait for server start")]),e._v(" "),i("li",[e._v("Remove '-logtodebugger'")]),e._v(" "),i("li",[e._v("Allow "),i("code",[e._v("-noserver")]),e._v(" with bitcoind")])]),e._v(" "),i("p",[e._v("Block-chain handling and storage:")]),e._v(" "),i("ul",[i("li",[e._v("Update leveldb to 1.15")]),e._v(" "),i("li",[e._v("Check for correct genesis (prevent cases where a datadir from the wrong\nnetwork is accidentally loaded)")]),e._v(" "),i("li",[e._v("Allow txindex to be removed and add a reindex dialog")]),e._v(" "),i("li",[e._v("Log aborted block database rebuilds")]),e._v(" "),i("li",[e._v("Store orphan blocks in serialized form, to save memory")]),e._v(" "),i("li",[e._v("Limit the number of orphan blocks in memory to 750")]),e._v(" "),i("li",[e._v("Fix non-standard disconnected transactions causing mempool orphans")]),e._v(" "),i("li",[e._v("Add a new checkpoint at block 279,000")])]),e._v(" "),i("p",[e._v("Wallet:")]),e._v(" "),i("ul",[i("li",[e._v("Bug fixes and new regression tests to correctly compute\nthe balance of wallets containing double-spent (or mutated) transactions")]),e._v(" "),i("li",[e._v("Store key creation time. Calculate whole-wallet birthday.")]),e._v(" "),i("li",[e._v("Optimize rescan to skip blocks prior to birthday")]),e._v(" "),i("li",[e._v("Let user select wallet file with -wallet=foo.dat")]),e._v(" "),i("li",[e._v("Consider generated coins mature at 101 instead of 120 blocks")]),e._v(" "),i("li",[e._v("Improve wallet load time")]),e._v(" "),i("li",[e._v("Don't count txins for priority to encourage sweeping")]),e._v(" "),i("li",[e._v("Don't create empty transactions when reading a corrupted wallet")]),e._v(" "),i("li",[e._v("Fix rescan to start from beginning after importprivkey")]),e._v(" "),i("li",[e._v("Only create signatures with low S values")])]),e._v(" "),i("p",[e._v("Mining:")]),e._v(" "),i("ul",[i("li",[e._v("Increase default -blockmaxsize/prioritysize to 750K/50K")]),e._v(" "),i("li",[e._v("'getblocktemplate' does not require a key to create a block template")]),e._v(" "),i("li",[e._v("Mining code fee policy now matches relay fee policy")])]),e._v(" "),i("p",[e._v("Protocol and network:")]),e._v(" "),i("ul",[i("li",[e._v("Drop the fee required to relay a transaction to 0.01mBTC per kilobyte")]),e._v(" "),i("li",[e._v("Send tx relay flag with version")]),e._v(" "),i("li",[e._v("New 'reject' P2P message (BIP 0061, see\nhttps://gist.github.com/gavinandresen/7079034 for draft)")]),e._v(" "),i("li",[e._v("Dump addresses every 15 minutes instead of 10 seconds")]),e._v(" "),i("li",[e._v("Relay OP_RETURN data TxOut as standard transaction type")]),e._v(" "),i("li",[e._v("Remove CENT-output free transaction rule when relaying")]),e._v(" "),i("li",[e._v("Lower maximum size for free transaction creation")]),e._v(" "),i("li",[e._v("Send multiple inv messages if mempool.size > MAX_INV_SZ")]),e._v(" "),i("li",[e._v("Split MIN_PROTO_VERSION into INIT_PROTO_VERSION and MIN_PEER_PROTO_VERSION")]),e._v(" "),i("li",[e._v("Do not treat fFromMe transaction differently when broadcasting")]),e._v(" "),i("li",[e._v("Process received messages one at a time without sleeping between messages")]),e._v(" "),i("li",[e._v("Improve logging of failed connections")]),e._v(" "),i("li",[e._v("Bump protocol version to 70002")]),e._v(" "),i("li",[e._v("Add some additional logging to give extra network insight")]),e._v(" "),i("li",[e._v("Added new DNS seed from bitcoinstats.com")])]),e._v(" "),i("p",[e._v("Validation:")]),e._v(" "),i("ul",[i("li",[e._v("Log reason for non-standard transaction rejection")]),e._v(" "),i("li",[e._v("Prune provably-unspendable outputs, and adapt consistency check for it.")]),e._v(" "),i("li",[e._v("Detect any sufficiently long fork and add a warning")]),e._v(" "),i("li",[e._v("Call the -alertnotify script when we see a long or invalid fork")]),e._v(" "),i("li",[e._v("Fix multi-block reorg transaction resurrection")]),e._v(" "),i("li",[e._v("Reject non-canonically-encoded serialization sizes")]),e._v(" "),i("li",[e._v("Reject dust amounts during validation")]),e._v(" "),i("li",[e._v("Accept nLockTime transactions that finalize in the next block")])]),e._v(" "),i("p",[e._v("Build system:")]),e._v(" "),i("ul",[i("li",[e._v("Switch to autotools-based build system")]),e._v(" "),i("li",[e._v("Build without wallet by passing "),i("code",[e._v("--disable-wallet")]),e._v(" to configure, this\nremoves the BerkeleyDB dependency")]),e._v(" "),i("li",[e._v("Upgrade gitian dependencies (libpng, libz, libupnpc, boost, openssl) to more\nrecent versions")]),e._v(" "),i("li",[e._v("Windows 64-bit build support")]),e._v(" "),i("li",[e._v("Solaris compatibility fixes")]),e._v(" "),i("li",[e._v("Check integrity of gitian input source tarballs")]),e._v(" "),i("li",[e._v("Enable full GCC Stack-smashing protection for all OSes")])]),e._v(" "),i("p",[e._v("GUI:")]),e._v(" "),i("ul",[i("li",[e._v("Switch to Qt 5.2.0 for Windows build")]),e._v(" "),i("li",[e._v("Add payment request (BIP 0070) support")]),e._v(" "),i("li",[e._v("Improve options dialog")]),e._v(" "),i("li",[e._v("Show transaction fee in new send confirmation dialog")]),e._v(" "),i("li",[e._v("Add total balance in overview page")]),e._v(" "),i("li",[e._v("Allow user to choose data directory on first start, when data directory is\nmissing, or when the -choosedatadir option is passed")]),e._v(" "),i("li",[e._v("Save and restore window positions")]),e._v(" "),i("li",[e._v("Add vout index to transaction id in transactions details dialog")]),e._v(" "),i("li",[e._v("Add network traffic graph in debug window")]),e._v(" "),i("li",[e._v("Add open URI dialog")]),e._v(" "),i("li",[e._v("Add Coin Control Features")]),e._v(" "),i("li",[e._v("Improve receive coins workflow: make the 'Receive' tab into a form to request\npayments, and move historical address list functionality to File menu.")]),e._v(" "),i("li",[e._v("Rebrand to "),i("code",[e._v("Bitcoin Core")])]),e._v(" "),i("li",[e._v('Move initialization/shutdown to a thread. This prevents "Not responding"\nmessages during startup. Also show a window during shutdown.')]),e._v(" "),i("li",[e._v("Don't regenerate autostart link on every client startup")]),e._v(" "),i("li",[e._v("Show and store message of normal bitcoin:URI")]),e._v(" "),i("li",[e._v("Fix richtext detection hang issue on very old Qt versions")]),e._v(" "),i("li",[e._v("OS X: Make use of the 10.8+ user notification center to display Growl-like\nnotifications")]),e._v(" "),i("li",[e._v("OS X: Added NSHighResolutionCapable flag to Info.plist for better font\nrendering on Retina displays.")]),e._v(" "),i("li",[e._v("OS X: Fix bitcoin-qt startup crash when clicking dock icon")]),e._v(" "),i("li",[e._v("Linux: Fix Gnome bitcoin: URI handler")])]),e._v(" "),i("p",[e._v("Miscellaneous:")]),e._v(" "),i("ul",[i("li",[e._v("Add Linux script (contrib/qos/tc.sh) to limit outgoing bandwidth")]),e._v(" "),i("li",[e._v("Add '-regtest' mode, similar to testnet but private with instant block\ngeneration with 'setgenerate' RPC.")]),e._v(" "),i("li",[e._v("Add 'linearize.py' script to contrib, for creating bootstrap.dat")]),e._v(" "),i("li",[e._v("Add separate bitcoin-cli client")])]),e._v(" "),i("h2",{attrs:{id:"credits"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#credits"}},[e._v("#")]),e._v(" Credits")]),e._v(" "),i("p",[e._v("Thanks to everyone who contributed to this release:")]),e._v(" "),i("ul",[i("li",[e._v("Andrey")]),e._v(" "),i("li",[e._v("Ashley Holman")]),e._v(" "),i("li",[e._v("b6393ce9-d324-4fe1-996b-acf82dbc3d53")]),e._v(" "),i("li",[e._v("bitsofproof")]),e._v(" "),i("li",[e._v("Brandon Dahler")]),e._v(" "),i("li",[e._v("Calvin Tam")]),e._v(" "),i("li",[e._v("Christian Decker")]),e._v(" "),i("li",[e._v("Christian von Roques")]),e._v(" "),i("li",[e._v("Christopher Latham")]),e._v(" "),i("li",[e._v("Chuck")]),e._v(" "),i("li",[e._v("coblee")]),e._v(" "),i("li",[e._v("constantined")]),e._v(" "),i("li",[e._v("Cory Fields")]),e._v(" "),i("li",[e._v("Cozz Lovan")]),e._v(" "),i("li",[e._v("daniel")]),e._v(" "),i("li",[e._v("Daniel Larimer")]),e._v(" "),i("li",[e._v("David Hill")]),e._v(" "),i("li",[e._v("Dmitry Smirnov")]),e._v(" "),i("li",[e._v("Drak")]),e._v(" "),i("li",[e._v("Eric Lombrozo")]),e._v(" "),i("li",[e._v("fanquake")]),e._v(" "),i("li",[e._v("fcicq")]),e._v(" "),i("li",[e._v("Florin")]),e._v(" "),i("li",[e._v("frewil")]),e._v(" "),i("li",[e._v("Gavin Andresen")]),e._v(" "),i("li",[e._v("Gregory Maxwell")]),e._v(" "),i("li",[e._v("gubatron")]),e._v(" "),i("li",[e._v("Guillermo Céspedes Tabárez")]),e._v(" "),i("li",[e._v("Haakon Nilsen")]),e._v(" "),i("li",[e._v("HaltingState")]),e._v(" "),i("li",[e._v("Han Lin Yap")]),e._v(" "),i("li",[e._v("harry")]),e._v(" "),i("li",[e._v("Ian Kelling")]),e._v(" "),i("li",[e._v("Jeff Garzik")]),e._v(" "),i("li",[e._v("Johnathan Corgan")]),e._v(" "),i("li",[e._v("Jonas Schnelli")]),e._v(" "),i("li",[e._v("Josh Lehan")]),e._v(" "),i("li",[e._v("Josh Triplett")]),e._v(" "),i("li",[e._v("Julian Langschaedel")]),e._v(" "),i("li",[e._v("Kangmo")]),e._v(" "),i("li",[e._v("Lake Denman")]),e._v(" "),i("li",[e._v("Luke Dashjr")]),e._v(" "),i("li",[e._v("Mark Friedenbach")]),e._v(" "),i("li",[e._v("Matt Corallo")]),e._v(" "),i("li",[e._v("Michael Bauer")]),e._v(" "),i("li",[e._v("Michael Ford")]),e._v(" "),i("li",[e._v("Michagogo")]),e._v(" "),i("li",[e._v("Midnight Magic")]),e._v(" "),i("li",[e._v("Mike Hearn")]),e._v(" "),i("li",[e._v("Nils Schneider")]),e._v(" "),i("li",[e._v("Noel Tiernan")]),e._v(" "),i("li",[e._v("Olivier Langlois")]),e._v(" "),i("li",[e._v("patrick s")]),e._v(" "),i("li",[e._v("Patrick Strateman")]),e._v(" "),i("li",[e._v("paveljanik")]),e._v(" "),i("li",[e._v("Peter Todd")]),e._v(" "),i("li",[e._v("phantomcircuit")]),e._v(" "),i("li",[e._v("phelixbtc")]),e._v(" "),i("li",[e._v("Philip Kaufmann")]),e._v(" "),i("li",[e._v("Pieter Wuille")]),e._v(" "),i("li",[e._v("Rav3nPL")]),e._v(" "),i("li",[e._v("R E Broadley")]),e._v(" "),i("li",[e._v("regergregregerrge")]),e._v(" "),i("li",[e._v("Robert Backhaus")]),e._v(" "),i("li",[e._v("Roman Mindalev")]),e._v(" "),i("li",[e._v("Rune K. Svendsen")]),e._v(" "),i("li",[e._v("Ryan Niebur")]),e._v(" "),i("li",[e._v("Scott Ellis")]),e._v(" "),i("li",[e._v("Scott Willeke")]),e._v(" "),i("li",[e._v("Sergey Kazenyuk")]),e._v(" "),i("li",[e._v("Shawn Wilkinson")]),e._v(" "),i("li",[e._v("Sined")]),e._v(" "),i("li",[e._v("sje")]),e._v(" "),i("li",[e._v("Subo1978")]),e._v(" "),i("li",[e._v("super3")]),e._v(" "),i("li",[e._v("Tamas Blummer")]),e._v(" "),i("li",[e._v("theuni")]),e._v(" "),i("li",[e._v("Thomas Holenstein")]),e._v(" "),i("li",[e._v("Timon Rapp")]),e._v(" "),i("li",[e._v("Timothy Stranex")]),e._v(" "),i("li",[e._v("Tom Geller")]),e._v(" "),i("li",[e._v("Torstein Husebø")]),e._v(" "),i("li",[e._v("Vaclav Vobornik")]),e._v(" "),i("li",[e._v("vhf / victor felder")]),e._v(" "),i("li",[e._v("Vinnie Falco")]),e._v(" "),i("li",[e._v("Warren Togami")]),e._v(" "),i("li",[e._v("Wil Bown")]),e._v(" "),i("li",[e._v("Wladimir J. van der Laan")])])])}),[],!1,null,null,null);t.default=n.exports}}]);