(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{544:function(e,t,n){"use strict";n.r(t);var a=n(43),i=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"_0-7-1"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_0-7-1"}},[e._v("#")]),e._v(" 0.7.1")]),e._v(" "),n("p",[e._v("Bitcoin version 0.7.1 is now available from:\nhttp://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.1/")]),e._v(" "),n("p",[e._v("This is a bug-fix minor release.")]),e._v(" "),n("p",[e._v("Please report bugs using the issue tracker at github:\nhttps://github.com/bitcoin/bitcoin/issues")]),e._v(" "),n("p",[e._v("Project source code is hosted at github; you can get\nsource-only tarballs/zipballs directly from there:\nhttps://github.com/bitcoin/bitcoin/tarball/v0.7.1  # .tar.gz\nhttps://github.com/bitcoin/bitcoin/zipball/v0.7.1  # .zip")]),e._v(" "),n("p",[e._v('Ubuntu Linux users can use the "Personal Package Archive" (PPA)\nmaintained by Matt Corallo to automatically keep\nup-to-date.  Just type:\nsudo apt-add-repository ppa:bitcoin/bitcoin\nsudo apt-get update\nin your terminal, then install the bitcoin-qt package:\nsudo apt-get install bitcoin-qt')]),e._v(" "),n("h2",{attrs:{id:"known-issues"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#known-issues"}},[e._v("#")]),e._v(" KNOWN ISSUES")]),e._v(" "),n("p",[e._v("Mac OSX 10.5 is no longer supported.")]),e._v(" "),n("h2",{attrs:{id:"how-to-upgrade"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#how-to-upgrade"}},[e._v("#")]),e._v(" How to Upgrade")]),e._v(" "),n("p",[e._v("If you are running an older version, shut it down. Wait\nuntil it has completely shut down (which might take a few minutes for older\nversions), then run the installer (on Windows) or just copy over\n/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).")]),e._v(" "),n("p",[e._v("If you were running on Linux with a version that might have been compiled\nwith a different version of Berkeley DB (for example, if you were using an\nUbuntu PPA version), then run the old version again with the -detachdb\nargument and shut it down; if you do not, then the new version will not\nbe able to read the database files and will exit with an error.")]),e._v(" "),n("p",[e._v('Explanation of -detachdb (and the new "stop true" RPC command):\nThe Berkeley DB database library stores data in both ".dat" and\n"log" files, so the database is always in a consistent state,\neven in case of power failure or other sudden shutdown. The\nformat of the ".dat" files is portable between different\nversions of Berkeley DB, but the "log" files are not-- even minor\nversion differences may have incompatible "log" files. The\n-detachdb option moves any pending changes from the "log" files\nto the "blkindex.dat" file for maximum compatibility, but makes\nshutdown much slower. Note that the "wallet.dat" file is always\ndetached, and versions prior to 0.6.0 detached all databases\nat shutdown.')]),e._v(" "),n("h2",{attrs:{id:"new-features"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#new-features"}},[e._v("#")]),e._v(" New features")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("Added a boolean argument to the RPC 'stop' command, if true sets\n-detachdb to create standalone database .dat files before shutting down.")])]),e._v(" "),n("li",[n("p",[e._v("-salvagewallet command-line option, which moves any existing wallet.dat\nto wallet.{timestamp}.dat and then attempts to salvage public/private\nkeys and master encryption keys (if the wallet is encrypted) into\na new wallet.dat. This should only be used if your wallet becomes\ncorrupted, and is not intended to replace regular wallet backups.")])]),e._v(" "),n("li",[n("p",[e._v("Import $DataDir/bootstrap.dat automatically, if it exists.")])])]),e._v(" "),n("h2",{attrs:{id:"dependency-changes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dependency-changes"}},[e._v("#")]),e._v(" Dependency changes")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("Qt 4.8.2 for Windows builds")])]),e._v(" "),n("li",[n("p",[e._v("openssl 1.0.1c")])])]),e._v(" "),n("h2",{attrs:{id:"bug-fixes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes"}},[e._v("#")]),e._v(" Bug fixes")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("Clicking on a bitcoin: URI on Windows should now launch Bitcoin-Qt properly.")])]),e._v(" "),n("li",[n("p",[e._v("When running -testnet, use RPC port 18332 by default.")])]),e._v(" "),n("li",[n("p",[e._v("Better detection and handling of corrupt wallet.dat and blkindex.dat files.\nPrevious versions would crash with a DB_RUNRECOVERY exception, this\nversion detects most problems and tells you how to recover if it\ncannot recover itself.")])]),e._v(" "),n("li",[n("p",[e._v("Fixed an uninitialized variable bug that could cause transactions to\nbe reported out of order.")])]),e._v(" "),n("li",[n("p",[e._v("Fixed a bug that could cause occasional crashes on exit.")])]),e._v(" "),n("li",[n("p",[e._v("Warn the user that they need to create fresh wallet backups after they\nencrypt their wallet.")])])]),e._v(" "),n("hr"),e._v(" "),n("p",[e._v("Thanks to everybody who contributed to this release:")]),e._v(" "),n("p",[e._v("Gavin Andresen\nJeff Garzik\nLuke Dashjr\nMark Friedenbach\nMatt Corallo\nPhilip Kaufmann\nPieter Wuille\nRune K. Svendsen\nVirgil Dupras\nWladimir J. van der Laan\nfanquake\nkjj2\nxanatos")])])}),[],!1,null,null,null);t.default=i.exports}}]);