(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{510:function(e,t,o){"use strict";o.r(t);var n=o(43),i=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"_0-11-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_0-11-2"}},[e._v("#")]),e._v(" 0.11.2")]),e._v(" "),o("p",[e._v("Bitcoin Core version 0.11.2 is now available from:")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://bitcoin.org/bin/bitcoin-core-0.11.2/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://bitcoin.org/bin/bitcoin-core-0.11.2/"),o("OutboundLink")],1)]),e._v(" "),o("p",[e._v("This is a new minor version release, bringing bug fixes, the BIP65\n(CLTV) consensus change, and relay policy preparation for BIP113. It is\nrecommended to upgrade to this version as soon as possible.")]),e._v(" "),o("p",[e._v("Please report bugs using the issue tracker at github:")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/issues",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/bitcoin/bitcoin/issues"),o("OutboundLink")],1)]),e._v(" "),o("h1",{attrs:{id:"upgrading-and-downgrading"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#upgrading-and-downgrading"}},[e._v("#")]),e._v(" Upgrading and downgrading")]),e._v(" "),o("h2",{attrs:{id:"how-to-upgrade"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#how-to-upgrade"}},[e._v("#")]),e._v(" How to Upgrade")]),e._v(" "),o("p",[e._v("If you are running an older version, shut it down. Wait until it has completely\nshut down (which might take a few minutes for older versions), then run the\ninstaller (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\nbitcoind/bitcoin-qt (on Linux).")]),e._v(" "),o("h2",{attrs:{id:"downgrade-warning"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#downgrade-warning"}},[e._v("#")]),e._v(" Downgrade warning")]),e._v(" "),o("p",[e._v("Because release 0.10.0 and later makes use of headers-first synchronization and\nparallel block download (see further), the block files and databases are not\nbackwards-compatible with pre-0.10 versions of Bitcoin Core or other software:")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("Blocks will be stored on disk out of order (in the order they are\nreceived, really), which makes it incompatible with some tools or\nother programs. Reindexing using earlier versions will also not work\nanymore as a result of this.")])]),e._v(" "),o("li",[o("p",[e._v("The block index database will now hold headers for which no block is\nstored on disk, which earlier versions won't support.")])])]),e._v(" "),o("p",[e._v("If you want to be able to downgrade smoothly, make a backup of your entire data\ndirectory. Without this your node will need start syncing (or importing from\nbootstrap.dat) anew afterwards. It is possible that the data from a completely\nsynchronised 0.10 node may be usable in older versions as-is, but this is not\nsupported and may break as soon as the older version attempts to reindex.")]),e._v(" "),o("p",[e._v("This does not affect wallet forward or backward compatibility. There are no\nknown problems when downgrading from 0.11.x to 0.10.x.")]),e._v(" "),o("h1",{attrs:{id:"notable-changes-since-0-11-1"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#notable-changes-since-0-11-1"}},[e._v("#")]),e._v(" Notable changes since 0.11.1")]),e._v(" "),o("h2",{attrs:{id:"bip65-soft-fork-to-enforce-op-checklocktimeverify-opcode"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#bip65-soft-fork-to-enforce-op-checklocktimeverify-opcode"}},[e._v("#")]),e._v(" BIP65 soft fork to enforce OP_CHECKLOCKTIMEVERIFY opcode")]),e._v(" "),o("p",[e._v("This release includes several changes related to the "),o("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP65"),o("OutboundLink")],1),e._v(" soft fork\nwhich redefines the existing OP_NOP2 opcode as OP_CHECKLOCKTIMEVERIFY\n(CLTV) so that a transaction output can be made unspendable until a\nspecified point in the future.")]),e._v(" "),o("ol",[o("li",[o("p",[e._v("This release will only relay and mine transactions spending a CLTV\noutput if they comply with the BIP65 rules as provided in code.")])]),e._v(" "),o("li",[o("p",[e._v("This release will produce version 4 blocks by default. Please see the\n"),o("em",[e._v("notice to miners")]),e._v(" below.")])]),e._v(" "),o("li",[o("p",[e._v("Once 951 out of a sequence of 1,001 blocks on the local node's best block\nchain contain version 4 (or higher) blocks, this release will no\nlonger accept new version 3 blocks and it will only accept version 4\nblocks if they comply with the BIP65 rules for CLTV.")])])]),e._v(" "),o("p",[e._v("For more information about the soft-forking change, please see\n"),o("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/pull/6351",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/bitcoin/bitcoin/pull/6351"),o("OutboundLink")],1)]),e._v(" "),o("p",[e._v("Graphs showing the progress towards block version 4 adoption may be\nfound at the URLs below:")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("Block versions over the last 50,000 blocks as progress towards BIP65\nconsensus enforcement: "),o("a",{attrs:{href:"http://bitcoin.sipa.be/ver-50k.png",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://bitcoin.sipa.be/ver-50k.png"),o("OutboundLink")],1)])]),e._v(" "),o("li",[o("p",[e._v("Block versions over the last 2,000 blocks showing the days to the\nearliest possible BIP65 consensus-enforced block: "),o("a",{attrs:{href:"http://bitcoin.sipa.be/ver-2k.png",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://bitcoin.sipa.be/ver-2k.png"),o("OutboundLink")],1)])])]),e._v(" "),o("p",[o("strong",[e._v("Notice to miners:")]),e._v(" Bitcoin Core’s block templates are now for\nversion 4 blocks only, and any mining software relying on its\ngetblocktemplate must be updated in parallel to use libblkmaker either\nversion 0.4.3 or any version from 0.5.2 onward.")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("If you are solo mining, this will affect you the moment you upgrade\nBitcoin Core, which must be done prior to BIP65 achieving its 951/1001\nstatus.")])]),e._v(" "),o("li",[o("p",[e._v("If you are mining with the stratum mining protocol: this does not\naffect you.")])]),e._v(" "),o("li",[o("p",[e._v("If you are mining with the getblocktemplate protocol to a pool: this\nwill affect you at the pool operator’s discretion, which must be no\nlater than BIP65 achieving its 951/1001 status.")])])]),e._v(" "),o("h2",{attrs:{id:"bip113-mempool-only-locktime-enforcement-using-getmediantimepast"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#bip113-mempool-only-locktime-enforcement-using-getmediantimepast"}},[e._v("#")]),e._v(" BIP113 mempool-only locktime enforcement using GetMedianTimePast()")]),e._v(" "),o("p",[e._v("Bitcoin transactions currently may specify a locktime indicating when\nthey may be added to a valid block.  Current consensus rules require\nthat blocks have a block header time greater than the locktime specified\nin any transaction in that block.")]),e._v(" "),o("p",[e._v("Miners get to choose what time they use for their header time, with the\nconsensus rule being that no node will accept a block whose time is more\nthan two hours in the future.  This creates a incentive for miners to\nset their header times to future values in order to include locktimed\ntransactions which weren't supposed to be included for up to two more\nhours.")]),e._v(" "),o("p",[e._v("The consensus rules also specify that valid blocks may have a header\ntime greater than that of the median of the 11 previous blocks.  This\nGetMedianTimePast() time has a key feature we generally associate with\ntime: it can't go backwards.")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP113"),o("OutboundLink")],1),e._v(" specifies a soft fork ("),o("strong",[e._v("not enforced in this release")]),e._v(") that\nweakens this perverse incentive for individual miners to use a future\ntime by requiring that valid blocks have a computed GetMedianTimePast()\ngreater than the locktime specified in any transaction in that block.")]),e._v(" "),o("p",[e._v("Mempool inclusion rules currently require transactions to be valid for\nimmediate inclusion in a block in order to be accepted into the mempool.\nThis release begins applying the BIP113 rule to received transactions,\nso transaction whose time is greater than the GetMedianTimePast() will\nno longer be accepted into the mempool.")]),e._v(" "),o("p",[o("strong",[e._v("Implication for miners:")]),e._v(" you will begin rejecting transactions that\nwould not be valid under BIP113, which will prevent you from producing\ninvalid blocks if/when BIP113 is enforced on the network. Any\ntransactions which are valid under the current rules but not yet valid\nunder the BIP113 rules will either be mined by other miners or delayed\nuntil they are valid under BIP113. Note, however, that time-based\nlocktime transactions are more or less unseen on the network currently.")]),e._v(" "),o("p",[o("strong",[e._v("Implication for users:")]),e._v(" GetMedianTimePast() always trails behind the\ncurrent time, so a transaction locktime set to the present time will be\nrejected by nodes running this release until the median time moves\nforward. To compensate, subtract one hour (3,600 seconds) from your\nlocktimes to allow those transactions to be included in mempools at\napproximately the expected time.")]),e._v(" "),o("h2",{attrs:{id:"windows-bug-fix-for-corrupted-utxo-database-on-unclean-shutdowns"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#windows-bug-fix-for-corrupted-utxo-database-on-unclean-shutdowns"}},[e._v("#")]),e._v(" Windows bug fix for corrupted UTXO database on unclean shutdowns")]),e._v(" "),o("p",[e._v("Several Windows users reported that they often need to reindex the\nentire blockchain after an unclean shutdown of Bitcoin Core on Windows\n(or an unclean shutdown of Windows itself). Although unclean shutdowns\nremain unsafe, this release no longer relies on memory-mapped files for\nthe UTXO database, which significantly reduced the frequency of unclean\nshutdowns leading to required reindexes during testing.")]),e._v(" "),o("p",[e._v("For more information, see: "),o("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/pull/6917",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/bitcoin/bitcoin/pull/6917"),o("OutboundLink")],1)]),e._v(" "),o("p",[e._v("Other fixes for database corruption on Windows are expected in the\nnext major release.")]),e._v(" "),o("h1",{attrs:{id:"_0-11-2-change-log"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_0-11-2-change-log"}},[e._v("#")]),e._v(" 0.11.2 Change log")]),e._v(" "),o("p",[e._v("Detailed release notes follow. This overview includes changes that affect\nbehavior, not code moves, refactors and string updates. For convenience in locating\nthe code changes and accompanying discussion, both the pull request and\ngit merge commit are mentioned.")]),e._v(" "),o("ul",[o("li",[e._v("#6124 "),o("code",[e._v("684636b")]),e._v(" Make CScriptNum() take nMaxNumSize as an argument")]),e._v(" "),o("li",[e._v("#6124 "),o("code",[e._v("4fa7a04")]),e._v(" Replace NOP2 with CHECKLOCKTIMEVERIFY (BIP65)")]),e._v(" "),o("li",[e._v("#6124 "),o("code",[e._v("6ea5ca4")]),e._v(" Enable CHECKLOCKTIMEVERIFY as a standard script verify flag")]),e._v(" "),o("li",[e._v("#6351 "),o("code",[e._v("5e82e1c")]),e._v(" Add CHECKLOCKTIMEVERIFY (BIP65) soft-fork logic")]),e._v(" "),o("li",[e._v("#6353 "),o("code",[e._v("ba1da90")]),e._v(" Show softfork status in getblockchaininfo")]),e._v(" "),o("li",[e._v("#6351 "),o("code",[e._v("6af25b0")]),e._v(" Add BIP65 to getblockchaininfo softforks list")]),e._v(" "),o("li",[e._v("#6688 "),o("code",[e._v("01878c9")]),e._v(" Fix locking in GetTransaction")]),e._v(" "),o("li",[e._v("#6653 "),o("code",[e._v("b3eaa30")]),e._v(" [Qt] Raise debug window when requested")]),e._v(" "),o("li",[e._v("#6600 "),o("code",[e._v("1e672ae")]),e._v(" Debian/Ubuntu: Include bitcoin-tx binary")]),e._v(" "),o("li",[e._v("#6600 "),o("code",[e._v("2394f4d")]),e._v(" Debian/Ubuntu: Split bitcoin-tx into its own package")]),e._v(" "),o("li",[e._v("#5987 "),o("code",[e._v("33d6825")]),e._v(" Bugfix: Allow mining on top of old tip blocks for testnet")]),e._v(" "),o("li",[e._v("#6852 "),o("code",[e._v("21e58b8")]),e._v(" build: make sure OpenSSL heeds noexecstack")]),e._v(" "),o("li",[e._v("#6846 "),o("code",[e._v("af6edac")]),e._v(" alias "),o("code",[e._v("-h")]),e._v(" for "),o("code",[e._v("--help")])]),e._v(" "),o("li",[e._v("#6867 "),o("code",[e._v("95a5039")]),e._v(" Set TCP_NODELAY on P2P sockets.")]),e._v(" "),o("li",[e._v("#6856 "),o("code",[e._v("dfe55bd")]),e._v(" Do not allow blockfile pruning during reindex.")]),e._v(" "),o("li",[e._v("#6566 "),o("code",[e._v("a1d3c6f")]),e._v(" Add rules--presently disabled--for using GetMedianTimePast as end point for lock-time calculations")]),e._v(" "),o("li",[e._v("#6566 "),o("code",[e._v("f720c5f")]),e._v(" Enable policy enforcing GetMedianTimePast as the end point of lock-time constraints")]),e._v(" "),o("li",[e._v("#6917 "),o("code",[e._v("0af5b8e")]),e._v(" leveldb: Win32WritableFile without memory mapping")]),e._v(" "),o("li",[e._v("#6948 "),o("code",[e._v("4e895b0")]),e._v(" Always flush block and undo when switching to new file")])]),e._v(" "),o("h1",{attrs:{id:"credits"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#credits"}},[e._v("#")]),e._v(" Credits")]),e._v(" "),o("p",[e._v("Thanks to everyone who directly contributed to this release:")]),e._v(" "),o("ul",[o("li",[e._v("Alex Morcos")]),e._v(" "),o("li",[e._v("฿tcDrak")]),e._v(" "),o("li",[e._v("Chris Kleeschulte")]),e._v(" "),o("li",[e._v("Daniel Cousens")]),e._v(" "),o("li",[e._v("Diego Viola")]),e._v(" "),o("li",[e._v("Eric Lombrozo")]),e._v(" "),o("li",[e._v("Esteban Ordano")]),e._v(" "),o("li",[e._v("Gregory Maxwell")]),e._v(" "),o("li",[e._v("Luke Dashjr")]),e._v(" "),o("li",[e._v("Marco Falke")]),e._v(" "),o("li",[e._v("Mark Friedenbach")]),e._v(" "),o("li",[e._v("Matt Corallo")]),e._v(" "),o("li",[e._v("Micha")]),e._v(" "),o("li",[e._v("Mitchell Cash")]),e._v(" "),o("li",[e._v("Peter Todd")]),e._v(" "),o("li",[e._v("Pieter Wuille")]),e._v(" "),o("li",[e._v("Wladimir J. van der Laan")]),e._v(" "),o("li",[e._v("Zak Wilcox")])]),e._v(" "),o("p",[e._v("And those who contributed additional code review and/or security research.")]),e._v(" "),o("p",[e._v("As well as everyone that helped translating on "),o("a",{attrs:{href:"https://www.transifex.com/projects/p/bitcoin/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Transifex"),o("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);t.default=i.exports}}]);